#*****************************************************************************************
# Vivado (TM) v2021.1 (64-bit)
#
# urllc-fifo.tcl: Tcl script for re-creating project 'urllc-fifo'
#
# Generated by Vivado on Thu Feb 03 20:54:55 +0800 2022
# IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (urllc-fifo.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/adc.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/count_trigger.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/fifo_read_to_axis.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/axis_write_to_fifo.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/dac.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/imports/new/mux.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/imports/new/ad2dma_rtl.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/d_trigger.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/clk_slow_to_fast.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/constrs_1/imports/new/urllc.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    "G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DDC/DDCWrapper.v"
#    "G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DUC/DUCWrapper.v"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/new/adc.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/new/count_trigger.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/new/fifo_read_to_axis.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/new/axis_write_to_fifo.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/new/dac.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/imports/new/mux.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/imports/new/ad2dma_rtl.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/new/d_trigger.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/sources_1/new/clk_slow_to_fast.v"]"\
 "[file normalize "$origin_dir/../../urllc-fifo.srcs/constrs_1/imports/new/urllc.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
 "[file normalize "$origin_dir/../../../chisel-test-project/generated/DDC/DDCWrapper.v"]"\
 "[file normalize "$origin_dir/../../../chisel-test-project/generated/DUC/DUCWrapper.v"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "urllc-fifo"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "urllc-fifo.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg400-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "4" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "4" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "4" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "4" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "4" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "4" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "4" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../../../chisel-test-project/generated/DDC/DDCWrapper.v"] \
 [file normalize "${origin_dir}/../../../chisel-test-project/generated/DUC/DUCWrapper.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/new/adc.v" ]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/new/count_trigger.v" ]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/new/fifo_read_to_axis.v" ]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/new/axis_write_to_fifo.v" ]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/new/dac.v" ]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/imports/new/mux.v"]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/imports/new/ad2dma_rtl.v"]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/new/d_trigger.v" ]\
 [file normalize "${origin_dir}/../../urllc-fifo.srcs/sources_1/new/clk_slow_to_fast.v" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "urllc_fifo_sender_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../../urllc-fifo.srcs/constrs_1/imports/new/urllc.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/urllc.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7z020clg400-2" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "DDCWrapper" -objects $obj
set_property -name "top_file" -value "../../../chisel-test-project/generated/DDC/DDCWrapper.v" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files DDCWrapper.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DDC/DDCWrapper.v
}
if { [get_files mux.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/imports/new/mux.v
}
if { [get_files count_trigger.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/count_trigger.v
}
if { [get_files fifo_read_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/fifo_read_to_axis.v
}
if { [get_files adc.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/adc.v
}
if { [get_files axis_write_to_fifo.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/axis_write_to_fifo.v
}
if { [get_files dac.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/dac.v
}
if { [get_files DUCWrapper.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DUC/DUCWrapper.v
}
if { [get_files DDCWrapper.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DDC/DDCWrapper.v
}
if { [get_files mux.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/imports/new/mux.v
}
if { [get_files count_trigger.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/count_trigger.v
}
if { [get_files fifo_read_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/fifo_read_to_axis.v
}
if { [get_files adc.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/adc.v
}
if { [get_files mux.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/imports/new/mux.v
}
if { [get_files axis_write_to_fifo.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/axis_write_to_fifo.v
}
if { [get_files dac.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/dac.v
}
if { [get_files DUCWrapper.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DUC/DUCWrapper.v
}


# Proc to create BD urllc_fifo_core
proc cr_bd_urllc_fifo_core { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# DDCWrapper, adc, count_trigger, fifo_read_to_axis, mux, DUCWrapper, axis_write_to_fifo, dac, mux



  # CHANGE DESIGN NAME HERE
  set design_name urllc_fifo_core

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:fifo_generator:13.2\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:axi_gpio:2.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  DDCWrapper\
  adc\
  count_trigger\
  fifo_read_to_axis\
  mux\
  DUCWrapper\
  axis_write_to_fifo\
  dac\
  mux\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: debug_ctrl
proc create_hier_cell_debug_ctrl { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_debug_ctrl() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI


  # Create pins
  create_bd_pin -dir O -from 0 -to 0 Dout
  create_bd_pin -dir O -from 0 -to 0 Dout1
  create_bd_pin -dir O -from 0 -to 0 Dout2
  create_bd_pin -dir O -from 0 -to 0 Dout3
  create_bd_pin -dir O -from 0 -to 0 Dout5
  create_bd_pin -dir O -from 0 -to 0 Dout6
  create_bd_pin -dir O -from 0 -to 0 Dout7
  create_bd_pin -dir O -from 0 -to 0 Dout8
  create_bd_pin -dir O -from 0 -to 0 Dout9
  create_bd_pin -dir O -from 15 -to 0 Dout10
  create_bd_pin -dir O -from 0 -to 0 Dout11
  create_bd_pin -dir O -from 7 -to 0 Dout12
  create_bd_pin -dir O -from 7 -to 0 Dout13
  create_bd_pin -dir I -type clk s_axi_aclk
  create_bd_pin -dir I -type rst s_axi_aresetn

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_ALL_OUTPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_0

  # Create instance: xlslice_adc_0_7, and set properties
  set xlslice_adc_0_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_adc_0_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_adc_0_7

  # Create instance: xlslice_clk_psclk_3, and set properties
  set xlslice_clk_psclk_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_clk_psclk_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_clk_psclk_3

  # Create instance: xlslice_clk_psen_4, and set properties
  set xlslice_clk_psen_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_clk_psen_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_clk_psen_4

  # Create instance: xlslice_clk_psincdec_5, and set properties
  set xlslice_clk_psincdec_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_clk_psincdec_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_clk_psincdec_5

  # Create instance: xlslice_count_trigger_clear_0, and set properties
  set xlslice_count_trigger_clear_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_count_trigger_clear_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_count_trigger_clear_0

  # Create instance: xlslice_counter_trigger_16_31, and set properties
  set xlslice_counter_trigger_16_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_counter_trigger_16_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_counter_trigger_16_31

  # Create instance: xlslice_dac_8_15, and set properties
  set xlslice_dac_8_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_dac_8_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_dac_8_15

  # Create instance: xlslice_ddc_sync_8, and set properties
  set xlslice_ddc_sync_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_ddc_sync_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_ddc_sync_8

  # Create instance: xlslice_duc_sync_6, and set properties
  set xlslice_duc_sync_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_duc_sync_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_duc_sync_6

  # Create instance: xlslice_fifo_read_start_2, and set properties
  set xlslice_fifo_read_start_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_fifo_read_start_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_fifo_read_start_2

  # Create instance: xlslice_fifo_write_start_1, and set properties
  set xlslice_fifo_write_start_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_fifo_write_start_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_fifo_write_start_1

  # Create instance: xlslice_reciever_in_9, and set properties
  set xlslice_reciever_in_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_reciever_in_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_reciever_in_9

  # Create instance: xlslice_reciever_out_7, and set properties
  set xlslice_reciever_out_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_reciever_out_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_reciever_out_7

  # Create interface connections
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M00_AXI [get_bd_intf_pins S_AXI] [get_bd_intf_pins axi_gpio_0/S_AXI]

  # Create port connections
  connect_bd_net -net axi_gpio_0_gpio2_io_o [get_bd_pins axi_gpio_0/gpio2_io_o] [get_bd_pins xlslice_clk_psclk_3/Din] [get_bd_pins xlslice_clk_psen_4/Din] [get_bd_pins xlslice_clk_psincdec_5/Din] [get_bd_pins xlslice_count_trigger_clear_0/Din] [get_bd_pins xlslice_ddc_sync_8/Din] [get_bd_pins xlslice_duc_sync_6/Din] [get_bd_pins xlslice_fifo_read_start_2/Din] [get_bd_pins xlslice_fifo_write_start_1/Din] [get_bd_pins xlslice_reciever_in_9/Din] [get_bd_pins xlslice_reciever_out_7/Din]
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins axi_gpio_0/gpio_io_o] [get_bd_pins xlslice_adc_0_7/Din] [get_bd_pins xlslice_counter_trigger_16_31/Din] [get_bd_pins xlslice_dac_8_15/Din]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins s_axi_aclk] [get_bd_pins axi_gpio_0/s_axi_aclk]
  connect_bd_net -net rst_ps7_0_50M_peripheral_aresetn [get_bd_pins s_axi_aresetn] [get_bd_pins axi_gpio_0/s_axi_aresetn]
  connect_bd_net -net xlslice_0_Dout1 [get_bd_pins Dout8] [get_bd_pins xlslice_fifo_write_start_1/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins Dout10] [get_bd_pins xlslice_counter_trigger_16_31/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins Dout9] [get_bd_pins xlslice_count_trigger_clear_0/Dout]
  connect_bd_net -net xlslice_adc_0_7_Dout [get_bd_pins Dout13] [get_bd_pins xlslice_adc_0_7/Dout]
  connect_bd_net -net xlslice_clk_psclk_3_Dout [get_bd_pins Dout2] [get_bd_pins xlslice_clk_psclk_3/Dout]
  connect_bd_net -net xlslice_clk_psen_4_Dout [get_bd_pins Dout1] [get_bd_pins xlslice_clk_psen_4/Dout]
  connect_bd_net -net xlslice_clk_psincdec_5_Dout [get_bd_pins Dout6] [get_bd_pins xlslice_clk_psincdec_5/Dout]
  connect_bd_net -net xlslice_dac_8_15_Dout [get_bd_pins Dout12] [get_bd_pins xlslice_dac_8_15/Dout]
  connect_bd_net -net xlslice_duc_sync_6_Dout [get_bd_pins Dout] [get_bd_pins xlslice_duc_sync_6/Dout]
  connect_bd_net -net xlslice_fifo_read_start_2_Dout [get_bd_pins Dout5] [get_bd_pins xlslice_fifo_read_start_2/Dout]
  connect_bd_net -net xlslice_reciever_in_10_Dout [get_bd_pins Dout11] [get_bd_pins xlslice_reciever_in_9/Dout]
  connect_bd_net -net xlslice_reciever_out_7_Dout [get_bd_pins Dout3] [get_bd_pins xlslice_reciever_out_7/Dout]
  connect_bd_net -net xlslice_reciever_out_8_Dout [get_bd_pins Dout7] [get_bd_pins xlslice_ddc_sync_8/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dac
proc create_hier_cell_dac { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dac() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 axis


  # Create pins
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir O -from 7 -to 0 da
  create_bd_pin -dir I -from 7 -to 0 da_in
  create_bd_pin -dir O da_in_vld
  create_bd_pin -dir I -from 7 -to 0 div
  create_bd_pin -dir I fifo_write_almost_full
  create_bd_pin -dir I fifo_write_full
  create_bd_pin -dir O -from 7 -to 0 fifo_write_wd_data
  create_bd_pin -dir O fifo_write_wd_en
  create_bd_pin -dir I io_in_sync
  create_bd_pin -dir I -type rst resetn
  create_bd_pin -dir I router
  create_bd_pin -dir I start

  # Create instance: DUCWrapper_0, and set properties
  set block_name DUCWrapper
  set block_cell_name DUCWrapper_0
  if { [catch {set DUCWrapper_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $DUCWrapper_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_write_to_fifo_0, and set properties
  set block_name axis_write_to_fifo
  set block_cell_name axis_write_to_fifo_0
  if { [catch {set axis_write_to_fifo_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_write_to_fifo_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dac_0, and set properties
  set block_name dac
  set block_cell_name dac_0
  if { [catch {set dac_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dac_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_DATA_DEPTH {8192} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {15} \
 ] $ila_0

  # Create instance: mux_reciever_out, and set properties
  set block_name mux
  set block_cell_name mux_reciever_out
  if { [catch {set mux_reciever_out [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mux_reciever_out eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_sender, and set properties
  set xlslice_sender [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_sender ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {8} \
 ] $xlslice_sender

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins axis] [get_bd_intf_pins axis_write_to_fifo_0/axis]

  # Create port connections
  connect_bd_net -net DUCWrapper_0_io_out_dac [get_bd_pins DUCWrapper_0/io_out_dac] [get_bd_pins ila_0/probe2] [get_bd_pins mux_reciever_out/sel1]
  connect_bd_net -net DUCWrapper_0_io_out_sync [get_bd_pins DUCWrapper_0/io_out_sync] [get_bd_pins ila_0/probe3]
  connect_bd_net -net Net [get_bd_pins dac_0/da_out] [get_bd_pins ila_0/probe8] [get_bd_pins mux_reciever_out/sel2] [get_bd_pins xlslice_sender/Din]
  connect_bd_net -net axis_write_to_fifo_0_fifo_write_wd_data [get_bd_pins fifo_write_wd_data] [get_bd_pins axis_write_to_fifo_0/fifo_write_wd_data] [get_bd_pins ila_0/probe13]
  connect_bd_net -net axis_write_to_fifo_0_fifo_write_wd_en [get_bd_pins fifo_write_wd_en] [get_bd_pins axis_write_to_fifo_0/fifo_write_wd_en] [get_bd_pins ila_0/probe14]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins clk] [get_bd_pins DUCWrapper_0/io_clock] [get_bd_pins axis_write_to_fifo_0/clk] [get_bd_pins dac_0/clk] [get_bd_pins ila_0/clk]
  connect_bd_net -net dac_0_da_in_vld [get_bd_pins da_in_vld] [get_bd_pins dac_0/da_in_vld] [get_bd_pins ila_0/probe9]
  connect_bd_net -net fifo_dac_almost_full [get_bd_pins fifo_write_almost_full] [get_bd_pins axis_write_to_fifo_0/fifo_write_almost_full] [get_bd_pins ila_0/probe12]
  connect_bd_net -net fifo_dac_dout [get_bd_pins da_in] [get_bd_pins dac_0/da_in] [get_bd_pins ila_0/probe6]
  connect_bd_net -net fifo_dac_full [get_bd_pins fifo_write_full] [get_bd_pins axis_write_to_fifo_0/fifo_write_full] [get_bd_pins ila_0/probe11]
  connect_bd_net -net mux_0_data_out [get_bd_pins da] [get_bd_pins ila_0/probe5] [get_bd_pins mux_reciever_out/data_out]
  connect_bd_net -net rst_ps7_0_50M_peripheral_aresetn [get_bd_pins resetn] [get_bd_pins DUCWrapper_0/io_resetN] [get_bd_pins axis_write_to_fifo_0/resetn] [get_bd_pins dac_0/resetn]
  connect_bd_net -net xlslice_0_Dout1 [get_bd_pins start] [get_bd_pins axis_write_to_fifo_0/start] [get_bd_pins ila_0/probe10]
  connect_bd_net -net xlslice_dac_8_15_Dout [get_bd_pins div] [get_bd_pins dac_0/div] [get_bd_pins ila_0/probe7]
  connect_bd_net -net xlslice_duc_sync_6_Dout [get_bd_pins io_in_sync] [get_bd_pins DUCWrapper_0/io_in_sync] [get_bd_pins ila_0/probe1]
  connect_bd_net -net xlslice_reciever_out_7_Dout [get_bd_pins router] [get_bd_pins ila_0/probe4] [get_bd_pins mux_reciever_out/router]
  connect_bd_net -net xlslice_sender_Dout [get_bd_pins DUCWrapper_0/io_in_data] [get_bd_pins ila_0/probe0] [get_bd_pins xlslice_sender/Dout]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /dac] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"2.42646",
   "Default View_TopLeft":"-134,419",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port axis -pg 1 -lvl 0 -x 0 -y 660 -defaultsOSRD
preplace port port-id_router -pg 1 -lvl 0 -x 0 -y 510 -defaultsOSRD
preplace port port-id_io_in_sync -pg 1 -lvl 0 -x 0 -y 400 -defaultsOSRD
preplace port port-id_clk -pg 1 -lvl 0 -x 0 -y 420 -defaultsOSRD
preplace port port-id_resetn -pg 1 -lvl 0 -x 0 -y 440 -defaultsOSRD
preplace port port-id_start -pg 1 -lvl 0 -x 0 -y 680 -defaultsOSRD
preplace port port-id_fifo_write_full -pg 1 -lvl 0 -x 0 -y 700 -defaultsOSRD
preplace port port-id_fifo_write_almost_full -pg 1 -lvl 0 -x 0 -y 720 -defaultsOSRD
preplace port port-id_fifo_write_wd_en -pg 1 -lvl 5 -x 1210 -y 720 -defaultsOSRD
preplace port port-id_da_in_vld -pg 1 -lvl 5 -x 1210 -y 260 -defaultsOSRD
preplace portBus da -pg 1 -lvl 5 -x 1210 -y 80 -defaultsOSRD
preplace portBus fifo_write_wd_data -pg 1 -lvl 5 -x 1210 -y 700 -defaultsOSRD
preplace portBus da_in -pg 1 -lvl 0 -x 0 -y 260 -defaultsOSRD
preplace portBus div -pg 1 -lvl 0 -x 0 -y 280 -defaultsOSRD
preplace inst mux_reciever_out -pg 1 -lvl 3 -x 780 -y 80 -defaultsOSRD
preplace inst axis_write_to_fifo_0 -pg 1 -lvl 3 -x 780 -y 710 -defaultsOSRD
preplace inst dac_0 -pg 1 -lvl 3 -x 780 -y 250 -defaultsOSRD
preplace inst DUCWrapper_0 -pg 1 -lvl 2 -x 380 -y 410 -defaultsOSRD
preplace inst xlslice_sender -pg 1 -lvl 1 -x 120 -y 340 -defaultsOSRD
preplace inst ila_0 -pg 1 -lvl 4 -x 1100 -y 490 -defaultsOSRD
preplace netloc DUCWrapper_0_io_out_dac 1 2 2 520 400 N
preplace netloc Net 1 0 4 20 270 NJ 270 600 340 970
preplace netloc axis_write_to_fifo_0_fifo_write_wd_data 1 3 2 970 700 NJ
preplace netloc axis_write_to_fifo_0_fifo_write_wd_en 1 3 2 1000 720 NJ
preplace netloc clk_wiz_0_clk_out1 1 0 4 NJ 420 230 500 580 350 980
preplace netloc dac_0_da_in_vld 1 3 2 990 260 NJ
preplace netloc fifo_dac_almost_full 1 0 4 NJ 720 NJ 720 530 600 NJ
preplace netloc fifo_dac_dout 1 0 4 NJ 260 NJ 260 570 370 1000J
preplace netloc fifo_dac_full 1 0 4 NJ 700 NJ 700 570 580 NJ
preplace netloc mux_0_data_out 1 3 2 1010 80 NJ
preplace netloc rst_ps7_0_50M_peripheral_aresetn 1 0 3 NJ 440 220 520 590
preplace netloc xlslice_0_Dout1 1 0 4 NJ 680 NJ 680 550 560 NJ
preplace netloc xlslice_dac_8_15_Dout 1 0 4 NJ 280 NJ 280 550 390 960J
preplace netloc xlslice_duc_sync_6_Dout 1 0 4 NJ 400 220 310 540J 380 N
preplace netloc xlslice_reciever_out_7_Dout 1 0 4 NJ 510 NJ 510 530 440 NJ
preplace netloc xlslice_sender_Dout 1 1 3 230 320 560J 360 N
preplace netloc DUCWrapper_0_io_out_sync 1 2 2 NJ 420 N
preplace netloc axi_dma_0_M_AXIS_MM2S 1 0 3 NJ 660 NJ 660 NJ
levelinfo -pg 1 0 120 380 780 1100 1210
pagesize -pg 1 -db -bbox -sgen -190 0 1410 820
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: core
proc create_hier_cell_core { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_core() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M00_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_MM2S

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_S2MM


  # Create pins
  create_bd_pin -dir I -from 0 -to 0 In0
  create_bd_pin -dir O almost_empty
  create_bd_pin -dir O almost_full
  create_bd_pin -dir O -type clk clk_out1
  create_bd_pin -dir O -type clk clk_out_dynamic
  create_bd_pin -dir I clk_pl_50M
  create_bd_pin -dir O -from 15 -to 0 data_count
  create_bd_pin -dir I -from 7 -to 0 din
  create_bd_pin -dir I -from 7 -to 0 din1
  create_bd_pin -dir O -from 7 -to 0 dout
  create_bd_pin -dir O -from 7 -to 0 dout1
  create_bd_pin -dir O empty
  create_bd_pin -dir O full
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn1
  create_bd_pin -dir I psclk
  create_bd_pin -dir I psen
  create_bd_pin -dir I psincdec
  create_bd_pin -dir I rd_en
  create_bd_pin -dir I rd_en1
  create_bd_pin -dir I wr_en
  create_bd_pin -dir I wr_en1

  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list \
   CONFIG.c_include_sg {0} \
   CONFIG.c_m_axis_mm2s_tdata_width {8} \
   CONFIG.c_mm2s_burst_size {256} \
   CONFIG.c_s2mm_burst_size {256} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
 ] $axi_dma_0

  # Create instance: axi_smc, and set properties
  set axi_smc [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 axi_smc ]
  set_property -dict [ list \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {2} \
 ] $axi_smc

  # Create instance: clk_dynamic, and set properties
  set clk_dynamic [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_dynamic ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {166.66} \
   CONFIG.CLKOUT1_JITTER {163.829} \
   CONFIG.CLKOUT1_PHASE_ERROR {130.371} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {60} \
   CONFIG.CLK_OUT1_PORT {clk_out_dynamic} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {17.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {16.667} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {17.000} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.PRIM_IN_FREQ {60.000} \
   CONFIG.PRIM_SOURCE {Global_buffer} \
   CONFIG.RESET_PORT {resetn} \
   CONFIG.RESET_TYPE {ACTIVE_LOW} \
   CONFIG.USE_DYN_PHASE_SHIFT {true} \
   CONFIG.USE_RESET {false} \
 ] $clk_dynamic

  # Create instance: clk_static, and set properties
  set clk_static [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_static ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {200.0} \
   CONFIG.CLKOUT1_JITTER {180.523} \
   CONFIG.CLKOUT1_PHASE_ERROR {162.874} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {60.000} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {20.250} \
   CONFIG.MMCM_CLKIN1_PERIOD {20.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {16.875} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} \
   CONFIG.RESET_PORT {resetn} \
   CONFIG.RESET_TYPE {ACTIVE_LOW} \
   CONFIG.USE_RESET {false} \
 ] $clk_static

  # Create instance: fifo_adc, and set properties
  set fifo_adc [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_adc ]
  set_property -dict [ list \
   CONFIG.Almost_Empty_Flag {true} \
   CONFIG.Almost_Full_Flag {true} \
   CONFIG.Data_Count {true} \
   CONFIG.Data_Count_Width {16} \
   CONFIG.Empty_Threshold_Assert_Value_rach {1022} \
   CONFIG.Empty_Threshold_Assert_Value_wach {1022} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {1022} \
   CONFIG.Enable_Safety_Circuit {false} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Flags_Reset_Value {0} \
   CONFIG.Full_Threshold_Assert_Value {65534} \
   CONFIG.Full_Threshold_Assert_Value_rach {1023} \
   CONFIG.Full_Threshold_Assert_Value_wach {1023} \
   CONFIG.Full_Threshold_Assert_Value_wrch {1023} \
   CONFIG.Full_Threshold_Negate_Value {65533} \
   CONFIG.INTERFACE_TYPE {Native} \
   CONFIG.Input_Data_Width {8} \
   CONFIG.Input_Depth {65536} \
   CONFIG.Output_Data_Width {8} \
   CONFIG.Output_Depth {65536} \
   CONFIG.Read_Data_Count_Width {16} \
   CONFIG.Reset_Type {Synchronous_Reset} \
   CONFIG.Use_Extra_Logic {false} \
   CONFIG.Write_Data_Count_Width {16} \
 ] $fifo_adc

  # Create instance: fifo_dac, and set properties
  set fifo_dac [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_dac ]
  set_property -dict [ list \
   CONFIG.Almost_Empty_Flag {true} \
   CONFIG.Almost_Full_Flag {true} \
   CONFIG.Data_Count {true} \
   CONFIG.Data_Count_Width {16} \
   CONFIG.Full_Threshold_Assert_Value {65534} \
   CONFIG.Full_Threshold_Negate_Value {65533} \
   CONFIG.Input_Data_Width {8} \
   CONFIG.Input_Depth {65536} \
   CONFIG.Output_Data_Width {8} \
   CONFIG.Output_Depth {65536} \
   CONFIG.Read_Data_Count_Width {16} \
   CONFIG.Write_Data_Count_Width {16} \
 ] $fifo_dac

  # Create instance: ila_1, and set properties
  set ila_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_1 ]
  set_property -dict [ list \
   CONFIG.C_DATA_DEPTH {8192} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {15} \
   CONFIG.C_PROBE0_WIDTH {3} \
 ] $ila_1

  # Create instance: ila_core, and set properties
  set ila_core [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_core ]
  set_property -dict [ list \
   CONFIG.C_DATA_DEPTH {8192} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {8} \
 ] $ila_core

  # Create instance: ila_fifo_in, and set properties
  set ila_fifo_in [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_fifo_in ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {true} \
   CONFIG.C_MONITOR_TYPE {AXI} \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4S} \
 ] $ila_fifo_in

  # Create instance: ila_fifo_out, and set properties
  set ila_fifo_out [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_fifo_out ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_ILA_AXI_MON {true} \
   CONFIG.C_MONITOR_TYPE {AXI} \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4S} \
 ] $ila_fifo_out

  # Create instance: processing_system7_0, and set properties
  set processing_system7_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0 ]
  set_property -dict [ list \
   CONFIG.PCW_ACT_APU_PERIPHERAL_FREQMHZ {666.666687} \
   CONFIG.PCW_ACT_CAN0_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN1_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_DCI_PERIPHERAL_FREQMHZ {10.158730} \
   CONFIG.PCW_ACT_ENET0_PERIPHERAL_FREQMHZ {125.000000} \
   CONFIG.PCW_ACT_ENET1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA0_PERIPHERAL_FREQMHZ {50.000000} \
   CONFIG.PCW_ACT_FPGA1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA2_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA3_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_I2C_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_PCAP_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_QSPI_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_SDIO_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_SMC_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_SPI_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_TPIU_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_TTC0_CLK0_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC0_CLK1_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC0_CLK2_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK0_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK1_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK2_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_UART_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_WDT_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_APU_CLK_RATIO_ENABLE {6:2:1} \
   CONFIG.PCW_APU_PERIPHERAL_FREQMHZ {666.666666} \
   CONFIG.PCW_ARMPLL_CTRL_FBDIV {40} \
   CONFIG.PCW_CAN0_BASEADDR {0xE0008000} \
   CONFIG.PCW_CAN0_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN0_HIGHADDR {0xE0008FFF} \
   CONFIG.PCW_CAN0_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN0_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN1_BASEADDR {0xE0009000} \
   CONFIG.PCW_CAN1_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN1_HIGHADDR {0xE0009FFF} \
   CONFIG.PCW_CAN1_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN1_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_CAN_PERIPHERAL_VALID {0} \
   CONFIG.PCW_CLK0_FREQ {50000000} \
   CONFIG.PCW_CLK1_FREQ {10000000} \
   CONFIG.PCW_CLK2_FREQ {10000000} \
   CONFIG.PCW_CLK3_FREQ {10000000} \
   CONFIG.PCW_CORE0_FIQ_INTR {0} \
   CONFIG.PCW_CORE0_IRQ_INTR {0} \
   CONFIG.PCW_CORE1_FIQ_INTR {0} \
   CONFIG.PCW_CORE1_IRQ_INTR {0} \
   CONFIG.PCW_CPU_CPU_6X4X_MAX_RANGE {767} \
   CONFIG.PCW_CPU_CPU_PLL_FREQMHZ {1333.333} \
   CONFIG.PCW_CPU_PERIPHERAL_CLKSRC {ARM PLL} \
   CONFIG.PCW_CPU_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_CRYSTAL_PERIPHERAL_FREQMHZ {33.333333} \
   CONFIG.PCW_DCI_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR0 {15} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR1 {7} \
   CONFIG.PCW_DCI_PERIPHERAL_FREQMHZ {10.159} \
   CONFIG.PCW_DDRPLL_CTRL_FBDIV {32} \
   CONFIG.PCW_DDR_DDR_PLL_FREQMHZ {1066.667} \
   CONFIG.PCW_DDR_HPRLPR_QUEUE_PARTITION {HPR(0)/LPR(32)} \
   CONFIG.PCW_DDR_HPR_TO_CRITICAL_PRIORITY_LEVEL {15} \
   CONFIG.PCW_DDR_LPR_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DDR_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DDR_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_DDR_PORT0_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT1_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT2_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT3_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_RAM_BASEADDR {0x00100000} \
   CONFIG.PCW_DDR_RAM_HIGHADDR {0x1FFFFFFF} \
   CONFIG.PCW_DDR_WRITE_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DM_WIDTH {4} \
   CONFIG.PCW_DQS_WIDTH {4} \
   CONFIG.PCW_DQ_WIDTH {32} \
   CONFIG.PCW_ENET0_BASEADDR {0xE000B000} \
   CONFIG.PCW_ENET0_ENET0_IO {MIO 16 .. 27} \
   CONFIG.PCW_ENET0_GRP_MDIO_ENABLE {1} \
   CONFIG.PCW_ENET0_GRP_MDIO_IO {EMIO} \
   CONFIG.PCW_ENET0_HIGHADDR {0xE000BFFF} \
   CONFIG.PCW_ENET0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR0 {8} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET0_RESET_ENABLE {0} \
   CONFIG.PCW_ENET1_BASEADDR {0xE000C000} \
   CONFIG.PCW_ENET1_GRP_MDIO_ENABLE {0} \
   CONFIG.PCW_ENET1_HIGHADDR {0xE000CFFF} \
   CONFIG.PCW_ENET1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_ENET1_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET1_RESET_ENABLE {0} \
   CONFIG.PCW_ENET_RESET_ENABLE {0} \
   CONFIG.PCW_ENET_RESET_POLARITY {Active Low} \
   CONFIG.PCW_EN_4K_TIMER {0} \
   CONFIG.PCW_EN_CAN0 {0} \
   CONFIG.PCW_EN_CAN1 {0} \
   CONFIG.PCW_EN_CLK0_PORT {1} \
   CONFIG.PCW_EN_CLK1_PORT {0} \
   CONFIG.PCW_EN_CLK2_PORT {0} \
   CONFIG.PCW_EN_CLK3_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG0_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG1_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG2_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG3_PORT {0} \
   CONFIG.PCW_EN_DDR {1} \
   CONFIG.PCW_EN_EMIO_CAN0 {0} \
   CONFIG.PCW_EN_EMIO_CAN1 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_ENET0 {0} \
   CONFIG.PCW_EN_EMIO_ENET1 {0} \
   CONFIG.PCW_EN_EMIO_GPIO {0} \
   CONFIG.PCW_EN_EMIO_I2C0 {0} \
   CONFIG.PCW_EN_EMIO_I2C1 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART0 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART1 {0} \
   CONFIG.PCW_EN_EMIO_PJTAG {0} \
   CONFIG.PCW_EN_EMIO_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_SPI0 {0} \
   CONFIG.PCW_EN_EMIO_SPI1 {0} \
   CONFIG.PCW_EN_EMIO_SRAM_INT {0} \
   CONFIG.PCW_EN_EMIO_TRACE {0} \
   CONFIG.PCW_EN_EMIO_TTC0 {0} \
   CONFIG.PCW_EN_EMIO_TTC1 {0} \
   CONFIG.PCW_EN_EMIO_UART0 {0} \
   CONFIG.PCW_EN_EMIO_UART1 {0} \
   CONFIG.PCW_EN_EMIO_WDT {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO1 {0} \
   CONFIG.PCW_EN_ENET0 {1} \
   CONFIG.PCW_EN_ENET1 {0} \
   CONFIG.PCW_EN_GPIO {0} \
   CONFIG.PCW_EN_I2C0 {0} \
   CONFIG.PCW_EN_I2C1 {0} \
   CONFIG.PCW_EN_MODEM_UART0 {0} \
   CONFIG.PCW_EN_MODEM_UART1 {0} \
   CONFIG.PCW_EN_PJTAG {0} \
   CONFIG.PCW_EN_PTP_ENET0 {0} \
   CONFIG.PCW_EN_PTP_ENET1 {0} \
   CONFIG.PCW_EN_QSPI {1} \
   CONFIG.PCW_EN_RST0_PORT {1} \
   CONFIG.PCW_EN_RST1_PORT {0} \
   CONFIG.PCW_EN_RST2_PORT {0} \
   CONFIG.PCW_EN_RST3_PORT {0} \
   CONFIG.PCW_EN_SDIO0 {1} \
   CONFIG.PCW_EN_SDIO1 {0} \
   CONFIG.PCW_EN_SMC {0} \
   CONFIG.PCW_EN_SPI0 {0} \
   CONFIG.PCW_EN_SPI1 {0} \
   CONFIG.PCW_EN_TRACE {0} \
   CONFIG.PCW_EN_TTC0 {0} \
   CONFIG.PCW_EN_TTC1 {0} \
   CONFIG.PCW_EN_UART0 {0} \
   CONFIG.PCW_EN_UART1 {1} \
   CONFIG.PCW_EN_USB0 {0} \
   CONFIG.PCW_EN_USB1 {0} \
   CONFIG.PCW_EN_WDT {0} \
   CONFIG.PCW_FCLK0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR1 {4} \
   CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK_CLK0_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK1_BUF {FALSE} \
   CONFIG.PCW_FCLK_CLK2_BUF {FALSE} \
   CONFIG.PCW_FCLK_CLK3_BUF {FALSE} \
   CONFIG.PCW_FPGA0_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_FPGA1_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_FPGA2_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_FPGA3_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK1_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK2_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK3_ENABLE {0} \
   CONFIG.PCW_GP0_EN_MODIFIABLE_TXN {1} \
   CONFIG.PCW_GP0_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP0_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GP1_EN_MODIFIABLE_TXN {1} \
   CONFIG.PCW_GP1_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP1_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GPIO_BASEADDR {0xE000A000} \
   CONFIG.PCW_GPIO_EMIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_EMIO_GPIO_WIDTH {64} \
   CONFIG.PCW_GPIO_HIGHADDR {0xE000AFFF} \
   CONFIG.PCW_GPIO_MIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C0_BASEADDR {0xE0004000} \
   CONFIG.PCW_I2C0_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C0_HIGHADDR {0xE0004FFF} \
   CONFIG.PCW_I2C0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C0_RESET_ENABLE {0} \
   CONFIG.PCW_I2C1_BASEADDR {0xE0005000} \
   CONFIG.PCW_I2C1_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C1_HIGHADDR {0xE0005FFF} \
   CONFIG.PCW_I2C1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C1_RESET_ENABLE {0} \
   CONFIG.PCW_I2C_PERIPHERAL_FREQMHZ {25} \
   CONFIG.PCW_I2C_RESET_ENABLE {0} \
   CONFIG.PCW_I2C_RESET_POLARITY {Active Low} \
   CONFIG.PCW_IMPORT_BOARD_PRESET {None} \
   CONFIG.PCW_INCLUDE_ACP_TRANS_CHECK {0} \
   CONFIG.PCW_INCLUDE_TRACE_BUFFER {0} \
   CONFIG.PCW_IOPLL_CTRL_FBDIV {30} \
   CONFIG.PCW_IO_IO_PLL_FREQMHZ {1000.000} \
   CONFIG.PCW_IRQ_F2P_INTR {1} \
   CONFIG.PCW_IRQ_F2P_MODE {DIRECT} \
   CONFIG.PCW_MIO_16_DIRECTION {out} \
   CONFIG.PCW_MIO_16_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_16_PULLUP {enabled} \
   CONFIG.PCW_MIO_16_SLEW {slow} \
   CONFIG.PCW_MIO_17_DIRECTION {out} \
   CONFIG.PCW_MIO_17_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_17_PULLUP {enabled} \
   CONFIG.PCW_MIO_17_SLEW {slow} \
   CONFIG.PCW_MIO_18_DIRECTION {out} \
   CONFIG.PCW_MIO_18_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_18_PULLUP {enabled} \
   CONFIG.PCW_MIO_18_SLEW {slow} \
   CONFIG.PCW_MIO_19_DIRECTION {out} \
   CONFIG.PCW_MIO_19_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_19_PULLUP {enabled} \
   CONFIG.PCW_MIO_19_SLEW {slow} \
   CONFIG.PCW_MIO_1_DIRECTION {out} \
   CONFIG.PCW_MIO_1_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_1_PULLUP {enabled} \
   CONFIG.PCW_MIO_1_SLEW {slow} \
   CONFIG.PCW_MIO_20_DIRECTION {out} \
   CONFIG.PCW_MIO_20_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_20_PULLUP {enabled} \
   CONFIG.PCW_MIO_20_SLEW {slow} \
   CONFIG.PCW_MIO_21_DIRECTION {out} \
   CONFIG.PCW_MIO_21_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_21_PULLUP {enabled} \
   CONFIG.PCW_MIO_21_SLEW {slow} \
   CONFIG.PCW_MIO_22_DIRECTION {in} \
   CONFIG.PCW_MIO_22_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_22_PULLUP {enabled} \
   CONFIG.PCW_MIO_22_SLEW {slow} \
   CONFIG.PCW_MIO_23_DIRECTION {in} \
   CONFIG.PCW_MIO_23_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_23_PULLUP {enabled} \
   CONFIG.PCW_MIO_23_SLEW {slow} \
   CONFIG.PCW_MIO_24_DIRECTION {in} \
   CONFIG.PCW_MIO_24_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_24_PULLUP {enabled} \
   CONFIG.PCW_MIO_24_SLEW {slow} \
   CONFIG.PCW_MIO_25_DIRECTION {in} \
   CONFIG.PCW_MIO_25_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_25_PULLUP {enabled} \
   CONFIG.PCW_MIO_25_SLEW {slow} \
   CONFIG.PCW_MIO_26_DIRECTION {in} \
   CONFIG.PCW_MIO_26_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_26_PULLUP {enabled} \
   CONFIG.PCW_MIO_26_SLEW {slow} \
   CONFIG.PCW_MIO_27_DIRECTION {in} \
   CONFIG.PCW_MIO_27_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_27_PULLUP {enabled} \
   CONFIG.PCW_MIO_27_SLEW {slow} \
   CONFIG.PCW_MIO_2_DIRECTION {inout} \
   CONFIG.PCW_MIO_2_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_2_PULLUP {disabled} \
   CONFIG.PCW_MIO_2_SLEW {slow} \
   CONFIG.PCW_MIO_3_DIRECTION {inout} \
   CONFIG.PCW_MIO_3_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_3_PULLUP {disabled} \
   CONFIG.PCW_MIO_3_SLEW {slow} \
   CONFIG.PCW_MIO_40_DIRECTION {inout} \
   CONFIG.PCW_MIO_40_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_40_PULLUP {enabled} \
   CONFIG.PCW_MIO_40_SLEW {slow} \
   CONFIG.PCW_MIO_41_DIRECTION {inout} \
   CONFIG.PCW_MIO_41_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_41_PULLUP {enabled} \
   CONFIG.PCW_MIO_41_SLEW {slow} \
   CONFIG.PCW_MIO_42_DIRECTION {inout} \
   CONFIG.PCW_MIO_42_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_42_PULLUP {enabled} \
   CONFIG.PCW_MIO_42_SLEW {slow} \
   CONFIG.PCW_MIO_43_DIRECTION {inout} \
   CONFIG.PCW_MIO_43_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_43_PULLUP {enabled} \
   CONFIG.PCW_MIO_43_SLEW {slow} \
   CONFIG.PCW_MIO_44_DIRECTION {inout} \
   CONFIG.PCW_MIO_44_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_44_PULLUP {enabled} \
   CONFIG.PCW_MIO_44_SLEW {slow} \
   CONFIG.PCW_MIO_45_DIRECTION {inout} \
   CONFIG.PCW_MIO_45_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_45_PULLUP {enabled} \
   CONFIG.PCW_MIO_45_SLEW {slow} \
   CONFIG.PCW_MIO_48_DIRECTION {out} \
   CONFIG.PCW_MIO_48_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_48_PULLUP {enabled} \
   CONFIG.PCW_MIO_48_SLEW {slow} \
   CONFIG.PCW_MIO_49_DIRECTION {in} \
   CONFIG.PCW_MIO_49_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_49_PULLUP {enabled} \
   CONFIG.PCW_MIO_49_SLEW {slow} \
   CONFIG.PCW_MIO_4_DIRECTION {inout} \
   CONFIG.PCW_MIO_4_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_4_PULLUP {disabled} \
   CONFIG.PCW_MIO_4_SLEW {slow} \
   CONFIG.PCW_MIO_5_DIRECTION {inout} \
   CONFIG.PCW_MIO_5_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_5_PULLUP {disabled} \
   CONFIG.PCW_MIO_5_SLEW {slow} \
   CONFIG.PCW_MIO_6_DIRECTION {out} \
   CONFIG.PCW_MIO_6_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_6_PULLUP {disabled} \
   CONFIG.PCW_MIO_6_SLEW {slow} \
   CONFIG.PCW_MIO_PRIMITIVE {54} \
   CONFIG.PCW_MIO_TREE_PERIPHERALS {unassigned#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI\
Flash#Quad SPI\
Flash#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#Enet\
0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet\
0#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#SD\
0#SD 0#SD 0#SD 0#SD 0#SD 0#unassigned#unassigned#UART 1#UART\
1#unassigned#unassigned#unassigned#unassigned}\
   CONFIG.PCW_MIO_TREE_SIGNALS {unassigned#qspi0_ss_b#qspi0_io[0]#qspi0_io[1]#qspi0_io[2]#qspi0_io[3]/HOLD_B#qspi0_sclk#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#tx_clk#txd[0]#txd[1]#txd[2]#txd[3]#tx_ctl#rx_clk#rxd[0]#rxd[1]#rxd[2]#rxd[3]#rx_ctl#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#clk#cmd#data[0]#data[1]#data[2]#data[3]#unassigned#unassigned#tx#rx#unassigned#unassigned#unassigned#unassigned}\
   CONFIG.PCW_M_AXI_GP0_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP0_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP0_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP0_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP1_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP1_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_NAND_CYCLES_T_AR {1} \
   CONFIG.PCW_NAND_CYCLES_T_CLR {1} \
   CONFIG.PCW_NAND_CYCLES_T_RC {11} \
   CONFIG.PCW_NAND_CYCLES_T_REA {1} \
   CONFIG.PCW_NAND_CYCLES_T_RR {1} \
   CONFIG.PCW_NAND_CYCLES_T_WC {11} \
   CONFIG.PCW_NAND_CYCLES_T_WP {1} \
   CONFIG.PCW_NAND_GRP_D8_ENABLE {0} \
   CONFIG.PCW_NAND_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_CS0_T_PC {1} \
   CONFIG.PCW_NOR_CS0_T_RC {11} \
   CONFIG.PCW_NOR_CS0_T_TR {1} \
   CONFIG.PCW_NOR_CS0_T_WC {11} \
   CONFIG.PCW_NOR_CS0_T_WP {1} \
   CONFIG.PCW_NOR_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_CS1_T_PC {1} \
   CONFIG.PCW_NOR_CS1_T_RC {11} \
   CONFIG.PCW_NOR_CS1_T_TR {1} \
   CONFIG.PCW_NOR_CS1_T_WC {11} \
   CONFIG.PCW_NOR_CS1_T_WP {1} \
   CONFIG.PCW_NOR_CS1_WE_TIME {0} \
   CONFIG.PCW_NOR_GRP_A25_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_INT_ENABLE {0} \
   CONFIG.PCW_NOR_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_SRAM_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_SRAM_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS1_WE_TIME {0} \
   CONFIG.PCW_OVERRIDE_BASIC_CLOCK {0} \
   CONFIG.PCW_P2F_CAN0_INTR {0} \
   CONFIG.PCW_P2F_CAN1_INTR {0} \
   CONFIG.PCW_P2F_CTI_INTR {0} \
   CONFIG.PCW_P2F_DMAC0_INTR {0} \
   CONFIG.PCW_P2F_DMAC1_INTR {0} \
   CONFIG.PCW_P2F_DMAC2_INTR {0} \
   CONFIG.PCW_P2F_DMAC3_INTR {0} \
   CONFIG.PCW_P2F_DMAC4_INTR {0} \
   CONFIG.PCW_P2F_DMAC5_INTR {0} \
   CONFIG.PCW_P2F_DMAC6_INTR {0} \
   CONFIG.PCW_P2F_DMAC7_INTR {0} \
   CONFIG.PCW_P2F_DMAC_ABORT_INTR {0} \
   CONFIG.PCW_P2F_ENET0_INTR {0} \
   CONFIG.PCW_P2F_ENET1_INTR {0} \
   CONFIG.PCW_P2F_GPIO_INTR {0} \
   CONFIG.PCW_P2F_I2C0_INTR {0} \
   CONFIG.PCW_P2F_I2C1_INTR {0} \
   CONFIG.PCW_P2F_QSPI_INTR {0} \
   CONFIG.PCW_P2F_SDIO0_INTR {0} \
   CONFIG.PCW_P2F_SDIO1_INTR {0} \
   CONFIG.PCW_P2F_SMC_INTR {0} \
   CONFIG.PCW_P2F_SPI0_INTR {0} \
   CONFIG.PCW_P2F_SPI1_INTR {0} \
   CONFIG.PCW_P2F_UART0_INTR {0} \
   CONFIG.PCW_P2F_UART1_INTR {0} \
   CONFIG.PCW_P2F_USB0_INTR {0} \
   CONFIG.PCW_P2F_USB1_INTR {0} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY0 {0.089} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY1 {0.075} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY2 {0.085} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY3 {0.092} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_0 {-0.025} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_1 {0.014} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_2 {-0.009} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_3 {-0.033} \
   CONFIG.PCW_PACKAGE_NAME {clg400} \
   CONFIG.PCW_PCAP_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_PCAP_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_PCAP_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_PERIPHERAL_BOARD_PRESET {None} \
   CONFIG.PCW_PJTAG_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_PLL_BYPASSMODE_ENABLE {0} \
   CONFIG.PCW_PRESET_BANK0_VOLTAGE {LVCMOS 3.3V} \
   CONFIG.PCW_PRESET_BANK1_VOLTAGE {LVCMOS 1.8V} \
   CONFIG.PCW_PS7_SI_REV {PRODUCTION} \
   CONFIG.PCW_QSPI_GRP_FBCLK_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_IO1_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_ENABLE {1} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_IO {MIO 1 .. 6} \
   CONFIG.PCW_QSPI_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_QSPI_INTERNAL_HIGHADDRESS {0xFCFFFFFF} \
   CONFIG.PCW_QSPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_QSPI_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_QSPI_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_QSPI_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_QSPI_QSPI_IO {MIO 1 .. 6} \
   CONFIG.PCW_SD0_GRP_CD_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SD0_SD0_IO {MIO 40 .. 45} \
   CONFIG.PCW_SD1_GRP_CD_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SDIO0_BASEADDR {0xE0100000} \
   CONFIG.PCW_SDIO0_HIGHADDR {0xE0100FFF} \
   CONFIG.PCW_SDIO1_BASEADDR {0xE0101000} \
   CONFIG.PCW_SDIO1_HIGHADDR {0xE0101FFF} \
   CONFIG.PCW_SDIO_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SDIO_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_SDIO_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SDIO_PERIPHERAL_VALID {1} \
   CONFIG.PCW_SINGLE_QSPI_DATA_MODE {x4} \
   CONFIG.PCW_SMC_CYCLE_T0 {NA} \
   CONFIG.PCW_SMC_CYCLE_T1 {NA} \
   CONFIG.PCW_SMC_CYCLE_T2 {NA} \
   CONFIG.PCW_SMC_CYCLE_T3 {NA} \
   CONFIG.PCW_SMC_CYCLE_T4 {NA} \
   CONFIG.PCW_SMC_CYCLE_T5 {NA} \
   CONFIG.PCW_SMC_CYCLE_T6 {NA} \
   CONFIG.PCW_SMC_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SMC_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SMC_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SMC_PERIPHERAL_VALID {0} \
   CONFIG.PCW_SPI0_BASEADDR {0xE0006000} \
   CONFIG.PCW_SPI0_GRP_SS0_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI0_HIGHADDR {0xE0006FFF} \
   CONFIG.PCW_SPI0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SPI1_BASEADDR {0xE0007000} \
   CONFIG.PCW_SPI1_GRP_SS0_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI1_HIGHADDR {0xE0007FFF} \
   CONFIG.PCW_SPI1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SPI_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SPI_PERIPHERAL_FREQMHZ {166.666666} \
   CONFIG.PCW_SPI_PERIPHERAL_VALID {0} \
   CONFIG.PCW_S_AXI_ACP_ARUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_AWUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_ID_WIDTH {3} \
   CONFIG.PCW_S_AXI_GP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_GP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP0_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP1_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP2_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP2_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP3_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP3_ID_WIDTH {6} \
   CONFIG.PCW_TPIU_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_TPIU_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TPIU_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_TRACE_BUFFER_CLOCK_DELAY {12} \
   CONFIG.PCW_TRACE_BUFFER_FIFO_SIZE {128} \
   CONFIG.PCW_TRACE_GRP_16BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_2BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_32BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_4BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_8BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_INTERNAL_WIDTH {2} \
   CONFIG.PCW_TRACE_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TRACE_PIPELINE_WIDTH {8} \
   CONFIG.PCW_TTC0_BASEADDR {0xE0104000} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_HIGHADDR {0xE0104fff} \
   CONFIG.PCW_TTC0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC1_BASEADDR {0xE0105000} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_HIGHADDR {0xE0105fff} \
   CONFIG.PCW_TTC1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_UART0_BASEADDR {0xE0000000} \
   CONFIG.PCW_UART0_BAUD_RATE {115200} \
   CONFIG.PCW_UART0_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART0_HIGHADDR {0xE0000FFF} \
   CONFIG.PCW_UART0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_UART1_BASEADDR {0xE0001000} \
   CONFIG.PCW_UART1_BAUD_RATE {115200} \
   CONFIG.PCW_UART1_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART1_HIGHADDR {0xE0001FFF} \
   CONFIG.PCW_UART1_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART1_UART1_IO {MIO 48 .. 49} \
   CONFIG.PCW_UART_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_UART_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_UART_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_UART_PERIPHERAL_VALID {1} \
   CONFIG.PCW_UIPARAM_ACT_DDR_FREQ_MHZ {533.333374} \
   CONFIG.PCW_UIPARAM_DDR_ADV_ENABLE {0} \
   CONFIG.PCW_UIPARAM_DDR_AL {0} \
   CONFIG.PCW_UIPARAM_DDR_BANK_ADDR_COUNT {3} \
   CONFIG.PCW_UIPARAM_DDR_BL {8} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY0 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY1 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY2 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY3 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BUS_WIDTH {16 Bit} \
   CONFIG.PCW_UIPARAM_DDR_CL {7} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_STOP_EN {0} \
   CONFIG.PCW_UIPARAM_DDR_COL_ADDR_COUNT {10} \
   CONFIG.PCW_UIPARAM_DDR_CWL {6} \
   CONFIG.PCW_UIPARAM_DDR_DEVICE_CAPACITY {4096 MBits} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PACKAGE_LENGTH {105.056} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PACKAGE_LENGTH {66.904} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PACKAGE_LENGTH {89.1715} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PACKAGE_LENGTH {113.63} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_0 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_1 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PACKAGE_LENGTH {98.503} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PACKAGE_LENGTH {68.5855} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PACKAGE_LENGTH {90.295} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PACKAGE_LENGTH {103.977} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DRAM_WIDTH {16 Bits} \
   CONFIG.PCW_UIPARAM_DDR_ECC {Disabled} \
   CONFIG.PCW_UIPARAM_DDR_ENABLE {1} \
   CONFIG.PCW_UIPARAM_DDR_FREQ_MHZ {533.333333} \
   CONFIG.PCW_UIPARAM_DDR_HIGH_TEMP {Normal (0-85)} \
   CONFIG.PCW_UIPARAM_DDR_MEMORY_TYPE {DDR 3} \
   CONFIG.PCW_UIPARAM_DDR_PARTNO {MT41J256M16 RE-125} \
   CONFIG.PCW_UIPARAM_DDR_ROW_ADDR_COUNT {15} \
   CONFIG.PCW_UIPARAM_DDR_SPEED_BIN {DDR3_1066F} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_DATA_EYE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_READ_GATE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_WRITE_LEVEL {1} \
   CONFIG.PCW_UIPARAM_DDR_T_FAW {40.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RAS_MIN {35.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RC {48.91} \
   CONFIG.PCW_UIPARAM_DDR_T_RCD {7} \
   CONFIG.PCW_UIPARAM_DDR_T_RP {7} \
   CONFIG.PCW_UIPARAM_DDR_USE_INTERNAL_VREF {0} \
   CONFIG.PCW_UIPARAM_GENERATE_SUMMARY {NA} \
   CONFIG.PCW_USB0_BASEADDR {0xE0102000} \
   CONFIG.PCW_USB0_HIGHADDR {0xE0102fff} \
   CONFIG.PCW_USB0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB0_RESET_ENABLE {0} \
   CONFIG.PCW_USB1_BASEADDR {0xE0103000} \
   CONFIG.PCW_USB1_HIGHADDR {0xE0103fff} \
   CONFIG.PCW_USB1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB1_RESET_ENABLE {0} \
   CONFIG.PCW_USB_RESET_ENABLE {0} \
   CONFIG.PCW_USB_RESET_POLARITY {Active Low} \
   CONFIG.PCW_USE_AXI_FABRIC_IDLE {0} \
   CONFIG.PCW_USE_AXI_NONSECURE {0} \
   CONFIG.PCW_USE_CORESIGHT {0} \
   CONFIG.PCW_USE_CROSS_TRIGGER {0} \
   CONFIG.PCW_USE_CR_FABRIC {1} \
   CONFIG.PCW_USE_DDR_BYPASS {0} \
   CONFIG.PCW_USE_DEBUG {0} \
   CONFIG.PCW_USE_DEFAULT_ACP_USER_VAL {0} \
   CONFIG.PCW_USE_DMA0 {0} \
   CONFIG.PCW_USE_DMA1 {0} \
   CONFIG.PCW_USE_DMA2 {0} \
   CONFIG.PCW_USE_DMA3 {0} \
   CONFIG.PCW_USE_EXPANDED_IOP {0} \
   CONFIG.PCW_USE_EXPANDED_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_FABRIC_INTERRUPT {1} \
   CONFIG.PCW_USE_HIGH_OCM {0} \
   CONFIG.PCW_USE_M_AXI_GP0 {1} \
   CONFIG.PCW_USE_M_AXI_GP1 {0} \
   CONFIG.PCW_USE_PROC_EVENT_BUS {0} \
   CONFIG.PCW_USE_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_S_AXI_ACP {0} \
   CONFIG.PCW_USE_S_AXI_GP0 {0} \
   CONFIG.PCW_USE_S_AXI_GP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP0 {1} \
   CONFIG.PCW_USE_S_AXI_HP1 {1} \
   CONFIG.PCW_USE_S_AXI_HP2 {0} \
   CONFIG.PCW_USE_S_AXI_HP3 {0} \
   CONFIG.PCW_USE_TRACE {0} \
   CONFIG.PCW_USE_TRACE_DATA_EDGE_DETECTOR {0} \
   CONFIG.PCW_VALUE_SILVERSION {3} \
   CONFIG.PCW_WDT_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_WDT_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_WDT_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_WDT_PERIPHERAL_FREQMHZ {133.333333} \
 ] $processing_system7_0

  # Create instance: ps7_0_axi_periph, and set properties
  set ps7_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 ps7_0_axi_periph ]
  set_property -dict [ list \
   CONFIG.NUM_MI {2} \
 ] $ps7_0_axi_periph

  # Create instance: reset_dynamic, and set properties
  set reset_dynamic [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 reset_dynamic ]

  # Create instance: reset_static, and set properties
  set reset_static [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 reset_static ]

  # Create instance: xlconcat_irq, and set properties
  set xlconcat_irq [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_irq ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {3} \
 ] $xlconcat_irq

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins M_AXIS_MM2S] [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S]
  connect_bd_intf_net -intf_net [get_bd_intf_nets axi_dma_0_M_AXIS_MM2S] [get_bd_intf_pins M_AXIS_MM2S] [get_bd_intf_pins ila_fifo_out/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins axi_dma_0/M_AXI_MM2S] [get_bd_intf_pins axi_smc/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins axi_smc/S01_AXI]
  connect_bd_intf_net -intf_net axi_smc_M00_AXI [get_bd_intf_pins axi_smc/M00_AXI] [get_bd_intf_pins processing_system7_0/S_AXI_HP0]
  connect_bd_intf_net -intf_net axi_smc_M01_AXI [get_bd_intf_pins axi_smc/M01_AXI] [get_bd_intf_pins processing_system7_0/S_AXI_HP1]
  connect_bd_intf_net -intf_net fifo_read_to_axis_0_axis [get_bd_intf_pins S_AXIS_S2MM] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net [get_bd_intf_nets fifo_read_to_axis_0_axis] [get_bd_intf_pins S_AXIS_S2MM] [get_bd_intf_pins ila_fifo_in/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_pins DDR] [get_bd_intf_pins processing_system7_0/DDR]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_pins FIXED_IO] [get_bd_intf_pins processing_system7_0/FIXED_IO]
  connect_bd_intf_net -intf_net processing_system7_0_M_AXI_GP0 [get_bd_intf_pins processing_system7_0/M_AXI_GP0] [get_bd_intf_pins ps7_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M00_AXI [get_bd_intf_pins M00_AXI] [get_bd_intf_pins ps7_0_axi_periph/M00_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M01_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins ps7_0_axi_periph/M01_AXI]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_irq/In0]
  connect_bd_net -net Net [get_bd_pins fifo_adc/srst] [get_bd_pins fifo_dac/srst] [get_bd_pins reset_static/peripheral_reset]
  connect_bd_net -net adc_0_ad_out [get_bd_pins din] [get_bd_pins fifo_adc/din] [get_bd_pins ila_1/probe1]
  connect_bd_net -net adc_0_ad_out_vld [get_bd_pins wr_en] [get_bd_pins fifo_adc/wr_en] [get_bd_pins ila_1/probe2]
  connect_bd_net -net axi_dma_0_mm2s_introut [get_bd_pins axi_dma_0/mm2s_introut] [get_bd_pins xlconcat_irq/In1]
  connect_bd_net -net axi_dma_0_s2mm_introut [get_bd_pins axi_dma_0/s2mm_introut] [get_bd_pins xlconcat_irq/In2]
  connect_bd_net -net axis_write_to_fifo_0_fifo_write_wd_data [get_bd_pins din1] [get_bd_pins fifo_dac/din] [get_bd_pins ila_1/probe10]
  connect_bd_net -net axis_write_to_fifo_0_fifo_write_wd_en [get_bd_pins wr_en1] [get_bd_pins fifo_dac/wr_en] [get_bd_pins ila_1/probe11]
  connect_bd_net -net clk_dynamic_clk_out_200M [get_bd_pins clk_out_dynamic] [get_bd_pins clk_dynamic/clk_out_dynamic] [get_bd_pins reset_dynamic/slowest_sync_clk]
  connect_bd_net -net clk_dynamic_locked [get_bd_pins clk_dynamic/locked] [get_bd_pins ila_core/probe1] [get_bd_pins reset_dynamic/dcm_locked]
  connect_bd_net -net clk_dynamic_psdone [get_bd_pins clk_dynamic/psdone] [get_bd_pins ila_core/probe7]
  connect_bd_net -net clk_pl_50M_1 [get_bd_pins clk_pl_50M] [get_bd_pins clk_static/clk_in1] [get_bd_pins ila_core/clk]
  connect_bd_net -net clk_static_clk_out1 [get_bd_pins clk_out1] [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_smc/aclk] [get_bd_pins clk_dynamic/clk_in1] [get_bd_pins clk_static/clk_out1] [get_bd_pins fifo_adc/clk] [get_bd_pins fifo_dac/clk] [get_bd_pins ila_1/clk] [get_bd_pins ila_fifo_in/clk] [get_bd_pins ila_fifo_out/clk] [get_bd_pins processing_system7_0/M_AXI_GP0_ACLK] [get_bd_pins processing_system7_0/S_AXI_HP0_ACLK] [get_bd_pins processing_system7_0/S_AXI_HP1_ACLK] [get_bd_pins ps7_0_axi_periph/ACLK] [get_bd_pins ps7_0_axi_periph/M00_ACLK] [get_bd_pins ps7_0_axi_periph/M01_ACLK] [get_bd_pins ps7_0_axi_periph/S00_ACLK] [get_bd_pins reset_static/slowest_sync_clk]
  connect_bd_net -net clk_static_locked [get_bd_pins clk_static/locked] [get_bd_pins ila_core/probe2] [get_bd_pins reset_static/dcm_locked]
  connect_bd_net -net dac_0_da_in_vld [get_bd_pins rd_en1] [get_bd_pins fifo_dac/rd_en] [get_bd_pins ila_1/probe13]
  connect_bd_net -net fifo_adc_almost_empty [get_bd_pins almost_empty] [get_bd_pins fifo_adc/almost_empty] [get_bd_pins ila_1/probe3]
  connect_bd_net -net fifo_adc_data_count [get_bd_pins data_count] [get_bd_pins fifo_adc/data_count] [get_bd_pins ila_1/probe7]
  connect_bd_net -net fifo_adc_dout [get_bd_pins dout] [get_bd_pins fifo_adc/dout] [get_bd_pins ila_1/probe5]
  connect_bd_net -net fifo_adc_empty [get_bd_pins empty] [get_bd_pins fifo_adc/empty] [get_bd_pins ila_1/probe4]
  connect_bd_net -net fifo_dac_almost_full [get_bd_pins almost_full] [get_bd_pins fifo_dac/almost_full] [get_bd_pins ila_1/probe8]
  connect_bd_net -net fifo_dac_data_count [get_bd_pins fifo_dac/data_count] [get_bd_pins ila_1/probe14]
  connect_bd_net -net fifo_dac_dout [get_bd_pins dout1] [get_bd_pins fifo_dac/dout] [get_bd_pins ila_1/probe12]
  connect_bd_net -net fifo_dac_full [get_bd_pins full] [get_bd_pins fifo_dac/full] [get_bd_pins ila_1/probe9]
  connect_bd_net -net fifo_read_to_axis_0_fifo_read_rd_en [get_bd_pins rd_en] [get_bd_pins fifo_adc/rd_en] [get_bd_pins ila_1/probe6]
  connect_bd_net -net processing_system7_0_FCLK_RESET0_N [get_bd_pins processing_system7_0/FCLK_RESET0_N] [get_bd_pins reset_dynamic/ext_reset_in] [get_bd_pins reset_static/ext_reset_in]
  connect_bd_net -net psclk_1 [get_bd_pins psclk] [get_bd_pins clk_dynamic/psclk] [get_bd_pins ila_core/probe4]
  connect_bd_net -net psen_1 [get_bd_pins psen] [get_bd_pins clk_dynamic/psen] [get_bd_pins ila_core/probe5]
  connect_bd_net -net psincdec_1 [get_bd_pins psincdec] [get_bd_pins clk_dynamic/psincdec] [get_bd_pins ila_core/probe6]
  connect_bd_net -net reset_dynamic_peripheral_aresetn [get_bd_pins peripheral_aresetn] [get_bd_pins ila_core/probe3] [get_bd_pins reset_dynamic/peripheral_aresetn]
  connect_bd_net -net rst_ps7_0_50M_peripheral_aresetn [get_bd_pins peripheral_aresetn1] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_smc/aresetn] [get_bd_pins ila_core/probe0] [get_bd_pins ps7_0_axi_periph/ARESETN] [get_bd_pins ps7_0_axi_periph/M00_ARESETN] [get_bd_pins ps7_0_axi_periph/M01_ARESETN] [get_bd_pins ps7_0_axi_periph/S00_ARESETN] [get_bd_pins reset_static/peripheral_aresetn]
  connect_bd_net -net xlconcat_irq_dout [get_bd_pins ila_1/probe0] [get_bd_pins processing_system7_0/IRQ_F2P] [get_bd_pins xlconcat_irq/dout]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /core] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.01052",
   "Default View_TopLeft":"-36,238",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 5 -x 1700 -y 390 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 5 -x 1700 -y 410 -defaultsOSRD
preplace port M_AXIS_MM2S -pg 1 -lvl 5 -x 1700 -y 1150 -defaultsOSRD
preplace port S_AXIS_S2MM -pg 1 -lvl 0 -x -10 -y 570 -defaultsOSRD
preplace port M00_AXI -pg 1 -lvl 5 -x 1700 -y 140 -defaultsOSRD
preplace port port-id_wr_en -pg 1 -lvl 0 -x -10 -y 730 -defaultsOSRD
preplace port port-id_rd_en -pg 1 -lvl 0 -x -10 -y 760 -defaultsOSRD
preplace port port-id_empty -pg 1 -lvl 5 -x 1700 -y 1070 -defaultsOSRD
preplace port port-id_almost_empty -pg 1 -lvl 5 -x 1700 -y 1030 -defaultsOSRD
preplace port port-id_wr_en1 -pg 1 -lvl 0 -x -10 -y 980 -defaultsOSRD
preplace port port-id_rd_en1 -pg 1 -lvl 0 -x -10 -y 1000 -defaultsOSRD
preplace port port-id_full -pg 1 -lvl 5 -x 1700 -y 1110 -defaultsOSRD
preplace port port-id_almost_full -pg 1 -lvl 5 -x 1700 -y 1090 -defaultsOSRD
preplace port port-id_clk_out_dynamic -pg 1 -lvl 5 -x 1700 -y 1960 -defaultsOSRD
preplace port port-id_clk_out1 -pg 1 -lvl 5 -x 1700 -y 1050 -defaultsOSRD
preplace port port-id_psincdec -pg 1 -lvl 0 -x -10 -y 1800 -defaultsOSRD
preplace port port-id_psen -pg 1 -lvl 0 -x -10 -y 1780 -defaultsOSRD
preplace port port-id_psclk -pg 1 -lvl 0 -x -10 -y 1760 -defaultsOSRD
preplace port port-id_clk_pl_50M -pg 1 -lvl 0 -x -10 -y 1570 -defaultsOSRD
preplace portBus peripheral_aresetn -pg 1 -lvl 5 -x 1700 -y 1980 -defaultsOSRD
preplace portBus din -pg 1 -lvl 0 -x -10 -y 710 -defaultsOSRD
preplace portBus dout -pg 1 -lvl 5 -x 1700 -y 640 -defaultsOSRD
preplace portBus data_count -pg 1 -lvl 5 -x 1700 -y 620 -defaultsOSRD
preplace portBus din1 -pg 1 -lvl 0 -x -10 -y 950 -defaultsOSRD
preplace portBus dout1 -pg 1 -lvl 5 -x 1700 -y 1130 -defaultsOSRD
preplace portBus peripheral_aresetn1 -pg 1 -lvl 5 -x 1700 -y 1170 -defaultsOSRD
preplace portBus In0 -pg 1 -lvl 0 -x -10 -y 550 -defaultsOSRD
preplace inst processing_system7_0 -pg 1 -lvl 3 -x 1060 -y 420 -defaultsOSRD
preplace inst reset_dynamic -pg 1 -lvl 3 -x 1060 -y 1740 -defaultsOSRD
preplace inst axi_dma_0 -pg 1 -lvl 1 -x 210 -y 430 -defaultsOSRD
preplace inst axi_smc -pg 1 -lvl 2 -x 570 -y 400 -defaultsOSRD
preplace inst clk_dynamic -pg 1 -lvl 2 -x 570 -y 1770 -defaultsOSRD
preplace inst fifo_adc -pg 1 -lvl 3 -x 1060 -y 710 -defaultsOSRD
preplace inst fifo_dac -pg 1 -lvl 3 -x 1060 -y 1130 -defaultsOSRD
preplace inst ps7_0_axi_periph -pg 1 -lvl 3 -x 1060 -y 150 -defaultsOSRD
preplace inst xlconcat_irq -pg 1 -lvl 2 -x 570 -y 250 -defaultsOSRD
preplace inst reset_static -pg 1 -lvl 3 -x 1060 -y 1400 -defaultsOSRD -resize 300 156
preplace inst ila_core -pg 1 -lvl 4 -x 1570 -y 1820 -defaultsOSRD
preplace inst clk_static -pg 1 -lvl 3 -x 1060 -y 1570 -defaultsOSRD -resize 140 96
preplace inst ila_1 -pg 1 -lvl 4 -x 1570 -y 850 -defaultsOSRD
preplace inst ila_fifo_in -pg 1 -lvl 1 -x 210 -y 620 -defaultsOSRD
preplace inst ila_fifo_out -pg 1 -lvl 4 -x 1570 -y 1230 -defaultsOSRD
preplace netloc In0_1 1 0 2 10J 230 NJ
preplace netloc Net 1 2 2 790 1300 1300
preplace netloc adc_0_ad_out 1 0 4 NJ 710 410J 940 710 560 1400
preplace netloc adc_0_ad_out_vld 1 0 4 NJ 730 400J 950 720 860 1340J
preplace netloc axi_dma_0_mm2s_introut 1 1 1 390 250n
preplace netloc axi_dma_0_s2mm_introut 1 1 1 410 270n
preplace netloc axis_write_to_fifo_0_fifo_write_wd_data 1 0 4 NJ 950 380J 970 760 920 NJ
preplace netloc axis_write_to_fifo_0_fifo_write_wd_en 1 0 4 NJ 980 NJ 980 770 940 N
preplace netloc clk_dynamic_clk_out_200M 1 2 3 790 1960 NJ 1960 NJ
preplace netloc clk_dynamic_locked 1 2 2 810 1840 1440
preplace netloc clk_dynamic_psdone 1 2 2 710J 1900 N
preplace netloc clk_pl_50M_1 1 0 4 NJ 1570 NJ 1570 720 1870 1450
preplace netloc clk_static_clk_out1 1 0 5 40 310 420 160 750 910 1370 1060 1670J
preplace netloc clk_static_locked 1 2 2 820 1850 1370
preplace netloc dac_0_da_in_vld 1 0 4 NJ 1000 NJ 1000 780 980 N
preplace netloc fifo_adc_almost_empty 1 2 3 800 870 1330 630 1670J
preplace netloc fifo_adc_data_count 1 3 2 1430 620 NJ
preplace netloc fifo_adc_dout 1 2 3 820 900 1350 640 NJ
preplace netloc fifo_adc_empty 1 2 3 810 880 1320 610 1680J
preplace netloc fifo_dac_almost_full 1 2 3 800 1500 1400 1090 NJ
preplace netloc fifo_dac_dout 1 2 3 820 1290 1420 1130 NJ
preplace netloc fifo_dac_full 1 2 3 810 1280 1390 1110 NJ
preplace netloc fifo_read_to_axis_0_fifo_read_rd_en 1 0 4 NJ 760 390J 960 730 890 1360J
preplace netloc processing_system7_0_FCLK_RESET0_N 1 2 2 810 1640 1310
preplace netloc psclk_1 1 0 4 NJ 1760 420 1910 NJ 1910 1460J
preplace netloc psen_1 1 0 4 NJ 1780 400 1890 NJ 1890 1470J
preplace netloc psincdec_1 1 0 4 NJ 1800 380 1880 NJ 1880 NJ
preplace netloc reset_dynamic_peripheral_aresetn 1 3 2 1420 1980 NJ
preplace netloc rst_ps7_0_50M_peripheral_aresetn 1 0 5 30 300 430 170 740 1860 1430 1160 1680J
preplace netloc xlconcat_irq_dout 1 2 2 810 550 1420
preplace netloc fifo_dac_data_count 1 3 1 1410 1000n
preplace netloc axi_dma_0_M_AXIS_MM2S 1 1 4 380 930 NJ 930 1380 1150 NJ
preplace netloc axi_dma_0_M_AXI_MM2S 1 1 1 N 370
preplace netloc axi_dma_0_M_AXI_S2MM 1 1 1 N 390
preplace netloc axi_smc_M00_AXI 1 2 1 N 390
preplace netloc axi_smc_M01_AXI 1 2 1 N 410
preplace netloc fifo_read_to_axis_0_axis 1 0 1 20 400n
preplace netloc processing_system7_0_DDR 1 3 2 NJ 390 NJ
preplace netloc processing_system7_0_FIXED_IO 1 3 2 NJ 410 NJ
preplace netloc processing_system7_0_M_AXI_GP0 1 2 2 820 290 1310
preplace netloc ps7_0_axi_periph_M00_AXI 1 3 2 NJ 140 NJ
preplace netloc ps7_0_axi_periph_M01_AXI 1 0 4 20 10 NJ 10 NJ 10 1310
levelinfo -pg 1 -10 210 570 1060 1570 1700
pagesize -pg 1 -db -bbox -sgen -160 0 1910 2000
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: adc
proc create_hier_cell_adc { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_adc() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 axis


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 ad
  create_bd_pin -dir O -from 7 -to 0 ad_out
  create_bd_pin -dir O ad_out_vld
  create_bd_pin -dir I clear
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -from 15 -to 0 count
  create_bd_pin -dir I -from 7 -to 0 div
  create_bd_pin -dir I fifo_read_almost_empty
  create_bd_pin -dir I fifo_read_empty
  create_bd_pin -dir I -from 7 -to 0 fifo_read_rd_data
  create_bd_pin -dir O fifo_read_rd_en
  create_bd_pin -dir I -type clk io_clock
  create_bd_pin -dir I io_in_sync
  create_bd_pin -dir I -type rst io_resetN
  create_bd_pin -dir I -type rst resetn
  create_bd_pin -dir I router
  create_bd_pin -dir I start
  create_bd_pin -dir I -from 15 -to 0 target
  create_bd_pin -dir O trigger_out

  # Create instance: DDCWrapper_0, and set properties
  set block_name DDCWrapper
  set block_cell_name DDCWrapper_0
  if { [catch {set DDCWrapper_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $DDCWrapper_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: adc_0, and set properties
  set block_name adc
  set block_cell_name adc_0
  if { [catch {set adc_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $adc_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: count_trigger_0, and set properties
  set block_name count_trigger
  set block_cell_name count_trigger_0
  if { [catch {set count_trigger_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $count_trigger_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: fifo_read_to_axis_0, and set properties
  set block_name fifo_read_to_axis
  set block_cell_name fifo_read_to_axis_0
  if { [catch {set fifo_read_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $fifo_read_to_axis_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ila_adc, and set properties
  set ila_adc [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_adc ]
  set_property -dict [ list \
   CONFIG.C_DATA_DEPTH {8192} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {23} \
 ] $ila_adc

  # Create instance: mux_reciever_in, and set properties
  set block_name mux
  set block_cell_name mux_reciever_in
  if { [catch {set mux_reciever_in [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mux_reciever_in eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {7} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins axis] [get_bd_intf_pins fifo_read_to_axis_0/axis]

  # Create port connections
  connect_bd_net -net DDCWrapper_0_io_out_ave [get_bd_pins DDCWrapper_0/io_out_ave] [get_bd_pins ila_adc/probe5]
  connect_bd_net -net DDCWrapper_0_io_out_data [get_bd_pins DDCWrapper_0/io_out_data] [get_bd_pins ila_adc/probe2] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net DDCWrapper_0_io_out_readData [get_bd_pins DDCWrapper_0/io_out_readData] [get_bd_pins ila_adc/probe4]
  connect_bd_net -net DDCWrapper_0_io_out_update [get_bd_pins DDCWrapper_0/io_out_update] [get_bd_pins ila_adc/probe3]
  connect_bd_net -net Net [get_bd_pins clk] [get_bd_pins adc_0/clk] [get_bd_pins count_trigger_0/clk] [get_bd_pins fifo_read_to_axis_0/clk] [get_bd_pins ila_adc/clk]
  connect_bd_net -net Net1 [get_bd_pins resetn] [get_bd_pins adc_0/resetn] [get_bd_pins count_trigger_0/resetn] [get_bd_pins fifo_read_to_axis_0/resetn]
  connect_bd_net -net Net2 [get_bd_pins io_clock] [get_bd_pins DDCWrapper_0/io_clock]
  connect_bd_net -net Net3 [get_bd_pins io_resetN] [get_bd_pins DDCWrapper_0/io_resetN]
  connect_bd_net -net ad_1 [get_bd_pins ad] [get_bd_pins DDCWrapper_0/io_in_data] [get_bd_pins ila_adc/probe0] [get_bd_pins mux_reciever_in/sel1]
  connect_bd_net -net adc_0_ad_out [get_bd_pins ad_out] [get_bd_pins adc_0/ad_out] [get_bd_pins ila_adc/probe9]
  connect_bd_net -net adc_0_ad_out_vld [get_bd_pins ad_out_vld] [get_bd_pins adc_0/ad_out_vld] [get_bd_pins ila_adc/probe10]
  connect_bd_net -net count_trigger_0_trigger_out [get_bd_pins trigger_out] [get_bd_pins count_trigger_0/trigger_out] [get_bd_pins ila_adc/probe14]
  connect_bd_net -net div_1 [get_bd_pins div] [get_bd_pins adc_0/div] [get_bd_pins ila_adc/probe8]
  connect_bd_net -net fifo_adc_data_count [get_bd_pins count] [get_bd_pins count_trigger_0/count] [get_bd_pins ila_adc/probe11]
  connect_bd_net -net fifo_read_almost_empty_1 [get_bd_pins fifo_read_almost_empty] [get_bd_pins fifo_read_to_axis_0/fifo_read_almost_empty] [get_bd_pins ila_adc/probe17]
  connect_bd_net -net fifo_read_empty_1 [get_bd_pins fifo_read_empty] [get_bd_pins fifo_read_to_axis_0/fifo_read_empty] [get_bd_pins ila_adc/probe16]
  connect_bd_net -net fifo_read_rd_data_1 [get_bd_pins fifo_read_rd_data] [get_bd_pins fifo_read_to_axis_0/fifo_read_rd_data] [get_bd_pins ila_adc/probe18]
  connect_bd_net -net fifo_read_to_axis_0_axis_tdata [get_bd_pins fifo_read_to_axis_0/axis_tdata] [get_bd_pins ila_adc/probe20]
  connect_bd_net -net fifo_read_to_axis_0_axis_tlast [get_bd_pins fifo_read_to_axis_0/axis_tlast] [get_bd_pins ila_adc/probe21]
  connect_bd_net -net fifo_read_to_axis_0_axis_tvalid [get_bd_pins fifo_read_to_axis_0/axis_tvalid] [get_bd_pins ila_adc/probe22]
  connect_bd_net -net fifo_read_to_axis_0_fifo_read_rd_en [get_bd_pins fifo_read_rd_en] [get_bd_pins fifo_read_to_axis_0/fifo_read_rd_en] [get_bd_pins ila_adc/probe19]
  connect_bd_net -net io_in_sync_1 [get_bd_pins io_in_sync] [get_bd_pins DDCWrapper_0/io_in_sync] [get_bd_pins ila_adc/probe1]
  connect_bd_net -net mux_reciever_in_data_out [get_bd_pins adc_0/ad_in] [get_bd_pins ila_adc/probe7] [get_bd_pins mux_reciever_in/data_out]
  connect_bd_net -net start_1 [get_bd_pins start] [get_bd_pins fifo_read_to_axis_0/start] [get_bd_pins ila_adc/probe15]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins mux_reciever_in/sel2] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins target] [get_bd_pins count_trigger_0/target] [get_bd_pins ila_adc/probe12]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins clear] [get_bd_pins count_trigger_0/clear] [get_bd_pins ila_adc/probe13]
  connect_bd_net -net xlslice_reciever_in_10_Dout [get_bd_pins router] [get_bd_pins ila_adc/probe6] [get_bd_pins mux_reciever_in/router]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /adc] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.13888",
   "Default View_TopLeft":"-281,-418",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port axis -pg 1 -lvl 6 -x 1500 -y 590 -defaultsOSRD
preplace port port-id_io_in_sync -pg 1 -lvl 0 -x 0 -y 140 -defaultsOSRD
preplace port port-id_clk -pg 1 -lvl 0 -x 0 -y 720 -defaultsOSRD
preplace port port-id_resetn -pg 1 -lvl 0 -x 0 -y 600 -defaultsOSRD
preplace port port-id_ad_out_vld -pg 1 -lvl 6 -x 1500 -y 630 -defaultsOSRD
preplace port port-id_router -pg 1 -lvl 0 -x 0 -y 250 -defaultsOSRD
preplace port port-id_clear -pg 1 -lvl 0 -x 0 -y 780 -defaultsOSRD
preplace port port-id_trigger_out -pg 1 -lvl 6 -x 1500 -y 650 -defaultsOSRD
preplace port port-id_fifo_read_almost_empty -pg 1 -lvl 0 -x 0 -y 660 -defaultsOSRD
preplace port port-id_fifo_read_empty -pg 1 -lvl 0 -x 0 -y 640 -defaultsOSRD
preplace port port-id_fifo_read_rd_en -pg 1 -lvl 6 -x 1500 -y 570 -defaultsOSRD
preplace port port-id_start -pg 1 -lvl 0 -x 0 -y 620 -defaultsOSRD
preplace port port-id_io_clock -pg 1 -lvl 0 -x 0 -y 160 -defaultsOSRD
preplace port port-id_io_resetN -pg 1 -lvl 0 -x 0 -y 180 -defaultsOSRD
preplace portBus ad -pg 1 -lvl 0 -x 0 -y 120 -defaultsOSRD
preplace portBus ad_out -pg 1 -lvl 6 -x 1500 -y 610 -defaultsOSRD
preplace portBus count -pg 1 -lvl 0 -x 0 -y 740 -defaultsOSRD
preplace portBus target -pg 1 -lvl 0 -x 0 -y 760 -defaultsOSRD
preplace portBus fifo_read_rd_data -pg 1 -lvl 0 -x 0 -y 680 -defaultsOSRD
preplace portBus div -pg 1 -lvl 0 -x 0 -y 700 -defaultsOSRD
preplace inst DDCWrapper_0 -pg 1 -lvl 1 -x 190 -y 150 -defaultsOSRD
preplace inst mux_reciever_in -pg 1 -lvl 3 -x 660 -y 320 -defaultsOSRD
preplace inst count_trigger_0 -pg 1 -lvl 4 -x 1060 -y 980 -defaultsOSRD
preplace inst fifo_read_to_axis_0 -pg 1 -lvl 4 -x 1060 -y 630 -defaultsOSRD
preplace inst adc_0 -pg 1 -lvl 4 -x 1060 -y 810 -defaultsOSRD
preplace inst xlconcat_0 -pg 1 -lvl 2 -x 440 -y 320 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 1 -x 190 -y 330 -defaultsOSRD
preplace inst ila_adc -pg 1 -lvl 5 -x 1390 -y 290 -defaultsOSRD
preplace netloc DDCWrapper_0_io_out_data 1 1 4 350 120 NJ 120 NJ 120 N
preplace netloc Net 1 0 5 NJ 720 NJ 720 NJ 720 810 60 NJ
preplace netloc Net1 1 0 4 NJ 600 NJ 600 NJ 600 780
preplace netloc Net2 1 0 1 NJ 160
preplace netloc Net3 1 0 1 NJ 180
preplace netloc ad_1 1 0 5 30 60 NJ 60 530 80 NJ 80 N
preplace netloc adc_0_ad_out 1 4 2 1270 610 NJ
preplace netloc adc_0_ad_out_vld 1 4 2 1280 630 NJ
preplace netloc count_trigger_0_trigger_out 1 4 2 1300 650 NJ
preplace netloc div_1 1 0 5 NJ 700 NJ 700 NJ 700 870 240 NJ
preplace netloc fifo_adc_data_count 1 0 5 NJ 740 NJ 740 NJ 740 830 300 NJ
preplace netloc fifo_read_almost_empty_1 1 0 5 NJ 660 NJ 660 NJ 660 860 420 NJ
preplace netloc fifo_read_empty_1 1 0 5 NJ 640 NJ 640 NJ 640 820 400 NJ
preplace netloc fifo_read_rd_data_1 1 0 5 NJ 680 NJ 680 NJ 680 880 440 NJ
preplace netloc fifo_read_to_axis_0_fifo_read_rd_en 1 4 2 1290 580 1480J
preplace netloc io_in_sync_1 1 0 5 20 50 NJ 50 NJ 50 NJ 50 1300
preplace netloc mux_reciever_in_data_out 1 3 2 840 220 NJ
preplace netloc start_1 1 0 5 NJ 620 NJ 620 NJ 620 800 380 NJ
preplace netloc xlconcat_0_dout 1 2 1 N 320
preplace netloc xlconstant_0_dout 1 1 1 NJ 330
preplace netloc xlslice_1_Dout 1 0 5 NJ 760 NJ 760 NJ 760 850 320 NJ
preplace netloc xlslice_2_Dout 1 0 5 NJ 780 NJ 780 NJ 780 790 340 NJ
preplace netloc xlslice_reciever_in_10_Dout 1 0 5 NJ 250 NJ 250 540 200 NJ 200 N
preplace netloc DDCWrapper_0_io_out_update 1 1 4 NJ 140 NJ 140 NJ 140 N
preplace netloc DDCWrapper_0_io_out_readData 1 1 4 NJ 160 NJ 160 NJ 160 N
preplace netloc DDCWrapper_0_io_out_ave 1 1 4 NJ 180 NJ 180 NJ 180 N
preplace netloc fifo_read_to_axis_0_axis_tdata 1 4 1 1240 480n
preplace netloc fifo_read_to_axis_0_axis_tlast 1 4 1 1250 500n
preplace netloc fifo_read_to_axis_0_axis_tvalid 1 4 1 1260 520n
preplace netloc Conn1 1 4 2 NJ 590 NJ
levelinfo -pg 1 0 190 440 660 1060 1390 1500
pagesize -pg 1 -db -bbox -sgen -210 0 1650 1080
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]


  # Create ports
  set ad [ create_bd_port -dir I -from 7 -to 0 ad ]
  set clk_ad_static [ create_bd_port -dir O -type clk clk_ad_static ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {60000000} \
 ] $clk_ad_static
  set clk_da_dynamic [ create_bd_port -dir O -type clk clk_da_dynamic ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {60000000} \
 ] $clk_da_dynamic
  set clk_pl_50M [ create_bd_port -dir I -type clk -freq_hz 50000000 clk_pl_50M ]
  set da [ create_bd_port -dir O -from 7 -to 0 da ]

  # Create instance: adc
  create_hier_cell_adc [current_bd_instance .] adc

  # Create instance: core
  create_hier_cell_core [current_bd_instance .] core

  # Create instance: dac
  create_hier_cell_dac [current_bd_instance .] dac

  # Create instance: debug_ctrl
  create_hier_cell_debug_ctrl [current_bd_instance .] debug_ctrl

  # Create interface connections
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins core/M_AXIS_MM2S] [get_bd_intf_pins dac/axis]
  connect_bd_intf_net -intf_net fifo_read_to_axis_0_axis [get_bd_intf_pins adc/axis] [get_bd_intf_pins core/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins core/DDR]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins core/FIXED_IO]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M00_AXI [get_bd_intf_pins core/M00_AXI] [get_bd_intf_pins debug_ctrl/S_AXI]

  # Create port connections
  connect_bd_net -net ad_1 [get_bd_ports ad] [get_bd_pins adc/ad]
  connect_bd_net -net adc_0_ad_out [get_bd_pins adc/ad_out] [get_bd_pins core/din]
  connect_bd_net -net adc_0_ad_out_vld [get_bd_pins adc/ad_out_vld] [get_bd_pins core/wr_en]
  connect_bd_net -net adc_trigger_out [get_bd_pins adc/trigger_out] [get_bd_pins core/In0]
  connect_bd_net -net axis_write_to_fifo_0_fifo_write_wd_data [get_bd_pins core/din1] [get_bd_pins dac/fifo_write_wd_data]
  connect_bd_net -net axis_write_to_fifo_0_fifo_write_wd_en [get_bd_pins core/wr_en1] [get_bd_pins dac/fifo_write_wd_en]
  connect_bd_net -net clk_dynamic_clk_out_200M [get_bd_ports clk_da_dynamic] [get_bd_pins adc/io_clock] [get_bd_pins core/clk_out_dynamic]
  connect_bd_net -net clk_pl_50M_1 [get_bd_ports clk_pl_50M] [get_bd_pins core/clk_pl_50M]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_ports clk_ad_static] [get_bd_pins adc/clk] [get_bd_pins core/clk_out1] [get_bd_pins dac/clk] [get_bd_pins debug_ctrl/s_axi_aclk]
  connect_bd_net -net core_almost_empty [get_bd_pins adc/fifo_read_almost_empty] [get_bd_pins core/almost_empty]
  connect_bd_net -net core_dout [get_bd_pins adc/fifo_read_rd_data] [get_bd_pins core/dout]
  connect_bd_net -net core_empty [get_bd_pins adc/fifo_read_empty] [get_bd_pins core/empty]
  connect_bd_net -net dac_0_da_in_vld [get_bd_pins core/rd_en1] [get_bd_pins dac/da_in_vld]
  connect_bd_net -net debug_ctrl_Dout1 [get_bd_pins core/psen] [get_bd_pins debug_ctrl/Dout1]
  connect_bd_net -net debug_ctrl_Dout2 [get_bd_pins core/psclk] [get_bd_pins debug_ctrl/Dout2]
  connect_bd_net -net debug_ctrl_Dout5 [get_bd_pins adc/start] [get_bd_pins debug_ctrl/Dout5]
  connect_bd_net -net debug_ctrl_Dout6 [get_bd_pins core/psincdec] [get_bd_pins debug_ctrl/Dout6]
  connect_bd_net -net div_1 [get_bd_pins adc/div] [get_bd_pins debug_ctrl/Dout13]
  connect_bd_net -net fifo_adc_data_count [get_bd_pins adc/count] [get_bd_pins core/data_count]
  connect_bd_net -net fifo_dac_almost_full [get_bd_pins core/almost_full] [get_bd_pins dac/fifo_write_almost_full]
  connect_bd_net -net fifo_dac_dout [get_bd_pins core/dout1] [get_bd_pins dac/da_in]
  connect_bd_net -net fifo_dac_full [get_bd_pins core/full] [get_bd_pins dac/fifo_write_full]
  connect_bd_net -net mux_0_data_out [get_bd_ports da] [get_bd_pins dac/da]
  connect_bd_net -net rd_en_1 [get_bd_pins adc/fifo_read_rd_en] [get_bd_pins core/rd_en]
  connect_bd_net -net reset_dynamic_peripheral_aresetn [get_bd_pins adc/io_resetN] [get_bd_pins core/peripheral_aresetn]
  connect_bd_net -net rst_ps7_0_50M_peripheral_aresetn [get_bd_pins adc/resetn] [get_bd_pins core/peripheral_aresetn1] [get_bd_pins dac/resetn] [get_bd_pins debug_ctrl/s_axi_aresetn]
  connect_bd_net -net xlslice_0_Dout1 [get_bd_pins dac/start] [get_bd_pins debug_ctrl/Dout8]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins adc/target] [get_bd_pins debug_ctrl/Dout10]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins adc/clear] [get_bd_pins debug_ctrl/Dout9]
  connect_bd_net -net xlslice_dac_8_15_Dout [get_bd_pins dac/div] [get_bd_pins debug_ctrl/Dout12]
  connect_bd_net -net xlslice_duc_sync_6_Dout [get_bd_pins dac/io_in_sync] [get_bd_pins debug_ctrl/Dout]
  connect_bd_net -net xlslice_reciever_in_10_Dout [get_bd_pins adc/router] [get_bd_pins debug_ctrl/Dout11]
  connect_bd_net -net xlslice_reciever_out_7_Dout [get_bd_pins dac/router] [get_bd_pins debug_ctrl/Dout3]
  connect_bd_net -net xlslice_reciever_out_8_Dout [get_bd_pins adc/io_in_sync] [get_bd_pins debug_ctrl/Dout7]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces core/axi_dma_0/Data_MM2S] [get_bd_addr_segs core/processing_system7_0/S_AXI_HP0/HP0_DDR_LOWOCM] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces core/axi_dma_0/Data_S2MM] [get_bd_addr_segs core/processing_system7_0/S_AXI_HP0/HP0_DDR_LOWOCM] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces core/axi_dma_0/Data_MM2S] [get_bd_addr_segs core/processing_system7_0/S_AXI_HP1/HP1_DDR_LOWOCM] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces core/axi_dma_0/Data_S2MM] [get_bd_addr_segs core/processing_system7_0/S_AXI_HP1/HP1_DDR_LOWOCM] -force
  assign_bd_address -offset 0x40400000 -range 0x00010000 -target_address_space [get_bd_addr_spaces core/processing_system7_0/Data] [get_bd_addr_segs core/axi_dma_0/S_AXI_LITE/Reg] -force
  assign_bd_address -offset 0x41200000 -range 0x00010000 -target_address_space [get_bd_addr_spaces core/processing_system7_0/Data] [get_bd_addr_segs debug_ctrl/axi_gpio_0/S_AXI/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.167465",
   "Default View_TopLeft":"-2657,-836",
   "ExpandedHierarchyInLayout":"/adc|/core|/dac|/debug_ctrl",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 4 -x 5950 -y 1650 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 4 -x 5950 -y 1670 -defaultsOSRD
preplace port port-id_clk_ad_static -pg 1 -lvl 4 -x 5950 -y 3130 -defaultsOSRD
preplace port port-id_clk_da_dynamic -pg 1 -lvl 4 -x 5950 -y 3110 -defaultsOSRD
preplace port port-id_clk_pl_50M -pg 1 -lvl 0 -x -10 -y 3030 -defaultsOSRD
preplace portBus ad -pg 1 -lvl 0 -x -10 -y 60 -defaultsOSRD
preplace portBus da -pg 1 -lvl 4 -x 5950 -y 3360 -defaultsOSRD
preplace inst adc -pg 1 -lvl 1 -x 400 -y 210 -defaultsOSRD
preplace inst core -pg 1 -lvl 2 -x 2310 -y 1440 -defaultsOSRD
preplace inst dac -pg 1 -lvl 3 -x 4570 -y 3390 -defaultsOSRD
preplace inst debug_ctrl -pg 1 -lvl 3 -x 4570 -y 1850 -defaultsOSRD
preplace inst adc|DDCWrapper_0 -pg 1 -lvl 1 -x 470 -y 310 -defaultsOSRD
preplace inst adc|mux_reciever_in -pg 1 -lvl 3 -x 950 -y 420 -defaultsOSRD
preplace inst adc|count_trigger_0 -pg 1 -lvl 4 -x 1350 -y 480 -defaultsOSRD
preplace inst adc|fifo_read_to_axis_0 -pg 1 -lvl 4 -x 1350 -y 820 -defaultsOSRD
preplace inst adc|adc_0 -pg 1 -lvl 4 -x 1350 -y 1000 -defaultsOSRD
preplace inst adc|xlconcat_0 -pg 1 -lvl 2 -x 720 -y 170 -defaultsOSRD
preplace inst adc|xlconstant_0 -pg 1 -lvl 1 -x 470 -y 180 -defaultsOSRD
preplace inst adc|ila_adc -pg 1 -lvl 5 -x 1730 -y 480 -defaultsOSRD
preplace inst core|processing_system7_0 -pg 1 -lvl 3 -x 3370 -y 1680 -defaultsOSRD
preplace inst core|reset_dynamic -pg 1 -lvl 3 -x 3370 -y 1910 -defaultsOSRD
preplace inst core|axi_dma_0 -pg 1 -lvl 1 -x 2430 -y 1790 -defaultsOSRD
preplace inst core|axi_smc -pg 1 -lvl 2 -x 2840 -y 1690 -defaultsOSRD
preplace inst core|clk_dynamic -pg 1 -lvl 2 -x 2840 -y 2570 -defaultsOSRD
preplace inst core|fifo_adc -pg 1 -lvl 3 -x 3370 -y 2240 -defaultsOSRD
preplace inst core|fifo_dac -pg 1 -lvl 3 -x 3370 -y 2850 -defaultsOSRD
preplace inst core|ps7_0_axi_periph -pg 1 -lvl 3 -x 3370 -y 1410 -defaultsOSRD
preplace inst core|xlconcat_irq -pg 1 -lvl 2 -x 2840 -y 1860 -defaultsOSRD
preplace inst core|reset_static -pg 1 -lvl 3 -x 3370 -y 2540 -defaultsOSRD
preplace inst core|ila_core -pg 1 -lvl 4 -x 3860 -y 2650 -defaultsOSRD
preplace inst core|clk_static -pg 1 -lvl 3 -x 3370 -y 3100 -defaultsOSRD
preplace inst core|ila_1 -pg 1 -lvl 4 -x 3860 -y 2140 -defaultsOSRD
preplace inst core|ila_fifo_in -pg 1 -lvl 1 -x 2430 -y 2020 -defaultsOSRD
preplace inst core|ila_fifo_out -pg 1 -lvl 4 -x 3860 -y 2420 -defaultsOSRD
preplace inst dac|mux_reciever_out -pg 1 -lvl 3 -x 5220 -y 3360 -defaultsOSRD
preplace inst dac|axis_write_to_fifo_0 -pg 1 -lvl 3 -x 5220 -y 3910 -defaultsOSRD
preplace inst dac|dac_0 -pg 1 -lvl 3 -x 5220 -y 3650 -defaultsOSRD
preplace inst dac|DUCWrapper_0 -pg 1 -lvl 2 -x 4830 -y 3430 -defaultsOSRD
preplace inst dac|xlslice_sender -pg 1 -lvl 1 -x 4560 -y 3400 -defaultsOSRD
preplace inst dac|ila_0 -pg 1 -lvl 4 -x 5580 -y 3690 -defaultsOSRD
preplace inst debug_ctrl|axi_gpio_0 -pg 1 -lvl 1 -x 4650 -y 2670 -defaultsOSRD
preplace inst debug_ctrl|xlslice_fifo_write_start_1 -pg 1 -lvl 2 -x 4900 -y 2460 -defaultsOSRD
preplace inst debug_ctrl|xlslice_counter_trigger_16_31 -pg 1 -lvl 2 -x 4900 -y 2660 -defaultsOSRD
preplace inst debug_ctrl|xlslice_count_trigger_clear_0 -pg 1 -lvl 2 -x 4900 -y 2560 -defaultsOSRD
preplace inst debug_ctrl|xlslice_dac_8_15 -pg 1 -lvl 2 -x 4900 -y 2860 -defaultsOSRD
preplace inst debug_ctrl|xlslice_clk_psen_4 -pg 1 -lvl 2 -x 4900 -y 1860 -defaultsOSRD
preplace inst debug_ctrl|xlslice_clk_psincdec_5 -pg 1 -lvl 2 -x 4900 -y 2260 -defaultsOSRD
preplace inst debug_ctrl|xlslice_clk_psclk_3 -pg 1 -lvl 2 -x 4900 -y 1960 -defaultsOSRD
preplace inst debug_ctrl|xlslice_duc_sync_6 -pg 1 -lvl 2 -x 4900 -y 1760 -defaultsOSRD
preplace inst debug_ctrl|xlslice_reciever_in_9 -pg 1 -lvl 2 -x 4900 -y 2760 -defaultsOSRD
preplace inst debug_ctrl|xlslice_reciever_out_7 -pg 1 -lvl 2 -x 4900 -y 2060 -defaultsOSRD
preplace inst debug_ctrl|xlslice_fifo_read_start_2 -pg 1 -lvl 2 -x 4900 -y 2160 -defaultsOSRD
preplace inst debug_ctrl|xlslice_ddc_sync_8 -pg 1 -lvl 2 -x 4900 -y 2360 -defaultsOSRD
preplace inst debug_ctrl|xlslice_adc_0_7 -pg 1 -lvl 2 -x 4900 -y 2960 -defaultsOSRD
preplace netloc ad_1 1 0 1 NJ 60
preplace netloc adc_0_ad_out 1 1 1 2030 790n
preplace netloc adc_0_ad_out_vld 1 1 1 1990 810n
preplace netloc adc_trigger_out 1 1 1 1980 830n
preplace netloc axis_write_to_fifo_0_fifo_write_wd_data 1 1 3 2000 3210 NJ 3210 5840
preplace netloc axis_write_to_fifo_0_fifo_write_wd_en 1 1 3 2010 3220 NJ 3220 5830
preplace netloc clk_dynamic_clk_out_200M 1 0 4 100 3280 NJ 3280 4130 3110 NJ
preplace netloc clk_pl_50M_1 1 0 2 NJ 3030 NJ
preplace netloc clk_wiz_0_clk_out1 1 0 4 30 3290 NJ 3290 4230 3130 NJ
preplace netloc core_almost_empty 1 0 3 110 1130 NJ 1130 4130
preplace netloc core_dout 1 0 3 130 1110 NJ 1110 4150
preplace netloc core_empty 1 0 3 120 1120 NJ 1120 4140
preplace netloc dac_0_da_in_vld 1 1 3 1990 3240 NJ 3240 5820
preplace netloc debug_ctrl_Dout1 1 1 3 2040 3190 NJ 3190 5920
preplace netloc debug_ctrl_Dout2 1 1 3 2020 3230 NJ 3230 5930
preplace netloc debug_ctrl_Dout5 1 0 4 80 3300 NJ 3300 4180J 3070 5850
preplace netloc debug_ctrl_Dout6 1 1 3 2030 3200 NJ 3200 5910
preplace netloc div_1 1 0 4 90 3310 NJ 3310 4200J 3080 5820
preplace netloc fifo_adc_data_count 1 0 3 40 3320 NJ 3320 4120
preplace netloc fifo_dac_almost_full 1 2 1 4140 2830n
preplace netloc fifo_dac_dout 1 2 1 4150 2790n
preplace netloc fifo_dac_full 1 2 1 4160 2810n
preplace netloc mux_0_data_out 1 3 1 NJ 3360
preplace netloc rd_en_1 1 1 1 1970 850n
preplace netloc reset_dynamic_peripheral_aresetn 1 0 3 140 1140 NJ 1140 4120
preplace netloc rst_ps7_0_50M_peripheral_aresetn 1 0 3 20 3330 NJ 3330 4240
preplace netloc xlslice_0_Dout1 1 2 2 4280 3120 5860
preplace netloc xlslice_1_Dout 1 0 4 70 3250 NJ 3250 4190J 3170 5870
preplace netloc xlslice_2_Dout 1 0 4 60 3270 NJ 3270 4210J 3180 5880
preplace netloc xlslice_dac_8_15_Dout 1 2 2 4260 3090 5830
preplace netloc xlslice_duc_sync_6_Dout 1 2 2 4270 1660 5930
preplace netloc xlslice_reciever_in_10_Dout 1 0 4 50 3260 NJ 3260 4170J 3150 5840
preplace netloc xlslice_reciever_out_7_Dout 1 2 2 4290 3100 5900
preplace netloc xlslice_reciever_out_8_Dout 1 0 4 10 3340 NJ 3340 4250J 3160 5890
preplace netloc axi_dma_0_M_AXIS_MM2S 1 2 1 4220 1690n
preplace netloc fifo_read_to_axis_0_axis 1 1 1 2040 770n
preplace netloc processing_system7_0_DDR 1 2 2 NJ 1650 NJ
preplace netloc processing_system7_0_FIXED_IO 1 2 2 NJ 1670 NJ
preplace netloc ps7_0_axi_periph_M00_AXI 1 2 1 4160 1710n
preplace netloc adc|DDCWrapper_0_io_out_data 1 1 4 630 290 NJ 290 NJ 290 1630
preplace netloc adc|Net 1 0 5 300J 80 NJ 80 NJ 80 1120 250 NJ
preplace netloc adc|Net1 1 0 4 NJ 500 NJ 500 NJ 500 1080
preplace netloc adc|Net2 1 0 1 290 320n
preplace netloc adc|Net3 1 0 1 310 340n
preplace netloc adc|ad_1 1 0 5 310 100 NJ 100 820 270 NJ 270 N
preplace netloc adc|adc_0_ad_out 1 4 2 1560 790 NJ
preplace netloc adc|adc_0_ad_out_vld 1 4 2 1610 810 NJ
preplace netloc adc|count_trigger_0_trigger_out 1 4 2 1590 190 1820J
preplace netloc adc|div_1 1 0 5 NJ 720 NJ 720 NJ 720 1100 330 1580J
preplace netloc adc|fifo_adc_data_count 1 0 5 NJ 540 NJ 540 NJ 540 1070 340 1550J
preplace netloc adc|fifo_read_almost_empty_1 1 0 5 NJ 600 NJ 600 NJ 600 1130 610 NJ
preplace netloc adc|fifo_read_empty_1 1 0 5 NJ 620 NJ 620 NJ 620 1170 590 NJ
preplace netloc adc|fifo_read_rd_data_1 1 0 5 NJ 640 NJ 640 NJ 640 1150 630 NJ
preplace netloc adc|fifo_read_to_axis_0_fifo_read_rd_en 1 4 2 1630 850 NJ
preplace netloc adc|io_in_sync_1 1 0 5 290 90 NJ 90 NJ 90 NJ 90 1640
preplace netloc adc|mux_reciever_in_data_out 1 3 2 1140 350 1570J
preplace netloc adc|start_1 1 0 5 NJ 660 NJ 660 NJ 660 1160 580 1530J
preplace netloc adc|xlconcat_0_dout 1 2 1 810 170n
preplace netloc adc|xlconstant_0_dout 1 1 1 NJ 180
preplace netloc adc|xlslice_1_Dout 1 0 5 300J 530 NJ 530 NJ 530 1110 370 1540J
preplace netloc adc|xlslice_2_Dout 1 0 5 NJ 580 NJ 580 NJ 580 1150 380 1530J
preplace netloc adc|xlslice_reciever_in_10_Dout 1 0 5 NJ 520 NJ 520 820 510 1090J 360 1560
preplace netloc adc|DDCWrapper_0_io_out_update 1 1 4 NJ 300 NJ 300 NJ 300 1620
preplace netloc adc|DDCWrapper_0_io_out_readData 1 1 4 NJ 320 NJ 320 NJ 320 1600
preplace netloc adc|DDCWrapper_0_io_out_ave 1 1 4 630J 310 NJ 310 NJ 310 1610
preplace netloc adc|fifo_read_to_axis_0_axis_tdata 1 4 1 1530 670n
preplace netloc adc|fifo_read_to_axis_0_axis_tlast 1 4 1 1550 690n
preplace netloc adc|fifo_read_to_axis_0_axis_tvalid 1 4 1 1640 710n
preplace netloc adc|Conn1 1 4 2 N 770 NJ
preplace netloc core|In0_1 1 0 2 2210J 2110 2640
preplace netloc core|Net 1 2 2 3110 2430 3610
preplace netloc core|adc_0_ad_out 1 0 4 2190J 2090 NJ 2090 3070 2040 3640J
preplace netloc core|adc_0_ad_out_vld 1 0 4 NJ 2120 NJ 2120 3080 2050 NJ
preplace netloc core|axi_dma_0_mm2s_introut 1 1 1 2650 1830n
preplace netloc core|axi_dma_0_s2mm_introut 1 1 1 2630 1850n
preplace netloc core|axis_write_to_fifo_0_fifo_write_wd_data 1 0 4 NJ 2390 NJ 2390 3020 2390 3620J
preplace netloc core|axis_write_to_fifo_0_fifo_write_wd_en 1 0 4 NJ 2410 NJ 2410 3000 2410 3610J
preplace netloc core|clk_dynamic_clk_out_200M 1 2 3 3030 2440 3640J 2490 3960J
preplace netloc core|clk_dynamic_locked 1 2 2 3060 2640 3710J
preplace netloc core|clk_dynamic_psdone 1 2 2 2990J 2660 3620J
preplace netloc core|clk_pl_50M_1 1 0 4 NJ 3030 NJ 3030 3060 3030 3730J
preplace netloc core|clk_static_clk_out1 1 0 5 2230 2100 2660 1600 3010 3020 3650 3040 NJ
preplace netloc core|clk_static_locked 1 2 2 3130 2650 3670
preplace netloc core|dac_0_da_in_vld 1 0 4 NJ 2630 2630J 2660 2980 2400 3670J
preplace netloc core|fifo_adc_almost_empty 1 2 3 3130 2070 3660 1930 NJ
preplace netloc core|fifo_adc_data_count 1 3 2 3730 2350 NJ
preplace netloc core|fifo_adc_dout 1 2 3 3120 2080 3720 1890 NJ
preplace netloc core|fifo_adc_empty 1 2 3 3110 2060 3730 1910 NJ
preplace netloc core|fifo_dac_almost_full 1 2 3 3120 3000 3660 2830 NJ
preplace netloc core|fifo_dac_dout 1 2 3 3130 3010 3690 2790 NJ
preplace netloc core|fifo_dac_full 1 2 3 3130 2700 3720 2810 NJ
preplace netloc core|fifo_read_to_axis_0_fifo_read_rd_en 1 0 4 NJ 2140 NJ 2140 3090 2090 3700J
preplace netloc core|processing_system7_0_FCLK_RESET0_N 1 2 2 3100 2030 3610
preplace netloc core|psclk_1 1 0 4 NJ 2690 2660 2670 NJ 2670 NJ
preplace netloc core|psen_1 1 0 4 NJ 2670 2640 2690 NJ 2690 NJ
preplace netloc core|psincdec_1 1 0 4 NJ 2650 2670 2680 NJ 2680 3610J
preplace netloc core|reset_dynamic_peripheral_aresetn 1 3 2 3680 1870 NJ
preplace netloc core|rst_ps7_0_50M_peripheral_aresetn 1 0 5 2210 1630 2670 1590 3050 2420 3630 3060 NJ
preplace netloc core|xlconcat_irq_dout 1 2 2 3080 2020 3640
preplace netloc core|fifo_dac_data_count 1 3 1 3700 2290n
preplace netloc core|axi_dma_0_M_AXIS_MM2S 1 1 4 2670J 1780 3040J 2010 3630 1690 NJ
preplace netloc core|axi_dma_0_M_AXI_MM2S 1 1 1 2630 1660n
preplace netloc core|axi_dma_0_M_AXI_S2MM 1 1 1 2650 1680n
preplace netloc core|axi_smc_M00_AXI 1 2 1 2980 1650n
preplace netloc core|axi_smc_M01_AXI 1 2 1 3000 1670n
preplace netloc core|fifo_read_to_axis_0_axis 1 0 1 2200 1710n
preplace netloc core|processing_system7_0_DDR 1 3 2 N 1650 NJ
preplace netloc core|processing_system7_0_FIXED_IO 1 3 2 N 1670 NJ
preplace netloc core|processing_system7_0_M_AXI_GP0 1 2 2 3080 1550 3610
preplace netloc core|ps7_0_axi_periph_M00_AXI 1 3 2 3630 1640 3960J
preplace netloc core|ps7_0_axi_periph_M01_AXI 1 0 4 2220 1950 NJ 1950 3020J 1810 3620
preplace netloc dac|DUCWrapper_0_io_out_dac 1 2 2 5020 3510 5460
preplace netloc dac|Net 1 0 4 4440 3340 NJ 3340 4980 3280 5430
preplace netloc dac|axis_write_to_fifo_0_fifo_write_wd_data 1 3 2 5450 3900 NJ
preplace netloc dac|axis_write_to_fifo_0_fifo_write_wd_en 1 3 2 5480 3920 NJ
preplace netloc dac|clk_wiz_0_clk_out1 1 0 4 4440J 3520 4670 3520 5020 3520 5490
preplace netloc dac|dac_0_da_in_vld 1 3 2 5410 3940 NJ
preplace netloc dac|fifo_dac_almost_full 1 0 4 NJ 3800 NJ 3800 4970 3800 NJ
preplace netloc dac|fifo_dac_dout 1 0 4 4440J 3740 NJ 3740 5010 3740 5400J
preplace netloc dac|fifo_dac_full 1 0 4 NJ 3780 NJ 3780 4990 3780 NJ
preplace netloc dac|mux_0_data_out 1 3 2 5480 3360 NJ
preplace netloc dac|rst_ps7_0_50M_peripheral_aresetn 1 0 3 NJ 3610 4690 3610 4980
preplace netloc dac|xlslice_0_Dout1 1 0 4 NJ 3760 NJ 3760 5010 3760 NJ
preplace netloc dac|xlslice_dac_8_15_Dout 1 0 4 4460J 3750 NJ 3750 5030 3750 5420J
preplace netloc dac|xlslice_duc_sync_6_Dout 1 0 4 4460J 3530 4660 3530 NJ 3530 5450
preplace netloc dac|xlslice_reciever_out_7_Dout 1 0 4 NJ 3550 NJ 3550 4980 3550 5440
preplace netloc dac|xlslice_sender_Dout 1 1 3 4680 3560 NJ 3560 NJ
preplace netloc dac|DUCWrapper_0_io_out_sync 1 2 2 NJ 3440 5470
preplace netloc dac|axi_dma_0_M_AXIS_MM2S 1 0 3 4450J 3540 NJ 3540 5000
preplace netloc debug_ctrl|axi_gpio_0_gpio2_io_o 1 1 1 4800 1760n
preplace netloc debug_ctrl|axi_gpio_0_gpio_io_o 1 1 1 4790 2660n
preplace netloc debug_ctrl|clk_wiz_0_clk_out1 1 0 1 N 2670
preplace netloc debug_ctrl|rst_ps7_0_50M_peripheral_aresetn 1 0 1 N 2690
preplace netloc debug_ctrl|xlslice_0_Dout1 1 2 1 NJ 2460
preplace netloc debug_ctrl|xlslice_1_Dout 1 2 1 NJ 2660
preplace netloc debug_ctrl|xlslice_2_Dout 1 2 1 NJ 2560
preplace netloc debug_ctrl|xlslice_adc_0_7_Dout 1 2 1 NJ 2960
preplace netloc debug_ctrl|xlslice_clk_psclk_3_Dout 1 2 1 NJ 1960
preplace netloc debug_ctrl|xlslice_clk_psen_4_Dout 1 2 1 NJ 1860
preplace netloc debug_ctrl|xlslice_clk_psincdec_5_Dout 1 2 1 NJ 2260
preplace netloc debug_ctrl|xlslice_dac_8_15_Dout 1 2 1 NJ 2860
preplace netloc debug_ctrl|xlslice_duc_sync_6_Dout 1 2 1 NJ 1760
preplace netloc debug_ctrl|xlslice_fifo_read_start_2_Dout 1 2 1 NJ 2160
preplace netloc debug_ctrl|xlslice_reciever_in_10_Dout 1 2 1 NJ 2760
preplace netloc debug_ctrl|xlslice_reciever_out_7_Dout 1 2 1 NJ 2060
preplace netloc debug_ctrl|xlslice_reciever_out_8_Dout 1 2 1 NJ 2360
preplace netloc debug_ctrl|ps7_0_axi_periph_M00_AXI 1 0 1 N 2650
levelinfo -pg 1 -10 400 2310 4570 5950
levelinfo -hier adc * 470 720 950 1350 1730 *
levelinfo -hier core * 2430 2840 3370 3860 *
levelinfo -hier dac * 4560 4830 5220 5580 *
levelinfo -hier debug_ctrl * 4650 4900 *
pagesize -pg 1 -db -bbox -sgen -140 0 6110 4040
pagesize -hier adc -db -bbox -sgen 260 40 1850 1090
pagesize -hier core -db -bbox -sgen 2160 1270 3990 3170
pagesize -hier dac -db -bbox -sgen 4410 3270 5700 4020
pagesize -hier debug_ctrl -db -bbox -sgen 4480 1700 5030 3020
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_urllc_fifo_core()
cr_bd_urllc_fifo_core ""
set_property REGISTERED_WITH_MANAGER "1" [get_files urllc_fifo_core.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files urllc_fifo_core.bd ] 



# Proc to create BD urllc_fifo_sender
proc cr_bd_urllc_fifo_sender { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# block design container source references:
# urllc_fifo_core



  # CHANGE DESIGN NAME HERE
  set design_name urllc_fifo_sender

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK Block Design Container Sources
  ##################################################################
  set bCheckSources 1
  set list_bdc_active "urllc_fifo_core"

  array set map_bdc_missing {}
  set map_bdc_missing(ACTIVE) ""
  set map_bdc_missing(BDC) ""

  if { $bCheckSources == 1 } {
     set list_check_srcs "\ 
  urllc_fifo_core \
  "

   common::send_gid_msg -ssname BD::TCL -id 2056 -severity "INFO" "Checking if the following sources for block design container exist in the project: $list_check_srcs .\n\n"

   foreach src $list_check_srcs {
      if { [can_resolve_reference $src] == 0 } {
         if { [lsearch $list_bdc_active $src] != -1 } {
            set map_bdc_missing(ACTIVE) "$map_bdc_missing(ACTIVE) $src"
         } else {
            set map_bdc_missing(BDC) "$map_bdc_missing(BDC) $src"
         }
      }
   }

   if { [llength $map_bdc_missing(ACTIVE)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2057 -severity "ERROR" "The following source(s) of Active variants are not found in the project: $map_bdc_missing(ACTIVE)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
      set bCheckIPsPassed 0
   }
   if { [llength $map_bdc_missing(BDC)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2059 -severity "WARNING" "The following source(s) of variants are not found in the project: $map_bdc_missing(BDC)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]


  # Create ports
  set clk_pl_50M [ create_bd_port -dir I -type clk -freq_hz 50000000 clk_pl_50M ]
  set sender_ad [ create_bd_port -dir I -from 7 -to 0 -type data sender_ad ]
  set sender_ad_clk_60M [ create_bd_port -dir O -type clk sender_ad_clk_60M ]
  set sender_da [ create_bd_port -dir O -from 7 -to 0 -type data sender_da ]
  set sender_da_clk_60M [ create_bd_port -dir O -type clk sender_da_clk_60M ]

  # Create instance: urllc_fifo_core_0, and set properties
  set urllc_fifo_core_0 [ create_bd_cell -type container -reference urllc_fifo_core urllc_fifo_core_0 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {urllc_fifo_core.bd} \
   CONFIG.ACTIVE_SYNTH_BD {urllc_fifo_core.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {urllc_fifo_core.bd} \
   CONFIG.LIST_SYNTH_BD {urllc_fifo_core.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $urllc_fifo_core_0

  # Create interface connections
  connect_bd_intf_net -intf_net urllc_fifo_core_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins urllc_fifo_core_0/DDR]
  connect_bd_intf_net -intf_net urllc_fifo_core_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins urllc_fifo_core_0/FIXED_IO]

  # Create port connections
  connect_bd_net -net clk_pl_50M_1 [get_bd_ports clk_pl_50M] [get_bd_pins urllc_fifo_core_0/clk_pl_50M]
  connect_bd_net -net sender_ad_1 [get_bd_ports sender_ad] [get_bd_pins urllc_fifo_core_0/ad]
  connect_bd_net -net urllc_fifo_core_0_clk_ad_static [get_bd_ports sender_ad_clk_60M] [get_bd_ports sender_da_clk_60M] [get_bd_pins urllc_fifo_core_0/clk_ad_static]
  connect_bd_net -net urllc_fifo_core_0_da [get_bd_ports sender_da] [get_bd_pins urllc_fifo_core_0/da]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.5",
   "Default View_TopLeft":"-341,-148",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 2 -x 330 -y 60 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 2 -x 330 -y 80 -defaultsOSRD
preplace port port-id_sender_da_clk_60M -pg 1 -lvl 2 -x 330 -y 120 -defaultsOSRD
preplace port port-id_sender_ad_clk_60M -pg 1 -lvl 2 -x 330 -y 100 -defaultsOSRD
preplace port port-id_clk_pl_50M -pg 1 -lvl 0 -x 0 -y 110 -defaultsOSRD
preplace portBus sender_ad -pg 1 -lvl 0 -x 0 -y 90 -defaultsOSRD
preplace portBus sender_da -pg 1 -lvl 2 -x 330 -y 140 -defaultsOSRD
preplace inst urllc_fifo_core_0 -pg 1 -lvl 1 -x 160 -y 100 -defaultsOSRD
preplace netloc clk_pl_50M_1 1 0 1 NJ 110
preplace netloc sender_ad_1 1 0 1 NJ 90
preplace netloc urllc_fifo_core_0_clk_ad_static 1 1 1 300 100n
preplace netloc urllc_fifo_core_0_da 1 1 1 NJ 140
preplace netloc urllc_fifo_core_0_DDR 1 1 1 NJ 60
preplace netloc urllc_fifo_core_0_FIXED_IO 1 1 1 NJ 80
levelinfo -pg 1 0 160 330
pagesize -pg 1 -db -bbox -sgen -150 0 510 200
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_urllc_fifo_sender()
cr_bd_urllc_fifo_sender ""
set_property REGISTERED_WITH_MANAGER "1" [get_files urllc_fifo_sender.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files urllc_fifo_sender.bd ] 

if { [get_files DDCWrapper.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DDC/DDCWrapper.v
}
if { [get_files mux.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/imports/new/mux.v
}
if { [get_files count_trigger.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/count_trigger.v
}
if { [get_files fifo_read_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/fifo_read_to_axis.v
}
if { [get_files adc.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/adc.v
}
if { [get_files axis_write_to_fifo.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/axis_write_to_fifo.v
}
if { [get_files dac.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/urllc-vivado/urllc-fifo.srcs/sources_1/new/dac.v
}
if { [get_files DUCWrapper.v] == "" } {
  import_files -quiet -fileset sources_1 G:/Chiro/Programs/urllc-demo-pynq/chisel-test-project/generated/DUC/DUCWrapper.v
}


# Proc to create BD urllc_fifo_receiver
proc cr_bd_urllc_fifo_receiver { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# block design container source references:
# urllc_fifo_core



  # CHANGE DESIGN NAME HERE
  set design_name urllc_fifo_receiver

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK Block Design Container Sources
  ##################################################################
  set bCheckSources 1
  set list_bdc_active "urllc_fifo_core"

  array set map_bdc_missing {}
  set map_bdc_missing(ACTIVE) ""
  set map_bdc_missing(BDC) ""

  if { $bCheckSources == 1 } {
     set list_check_srcs "\ 
  urllc_fifo_core \
  "

   common::send_gid_msg -ssname BD::TCL -id 2056 -severity "INFO" "Checking if the following sources for block design container exist in the project: $list_check_srcs .\n\n"

   foreach src $list_check_srcs {
      if { [can_resolve_reference $src] == 0 } {
         if { [lsearch $list_bdc_active $src] != -1 } {
            set map_bdc_missing(ACTIVE) "$map_bdc_missing(ACTIVE) $src"
         } else {
            set map_bdc_missing(BDC) "$map_bdc_missing(BDC) $src"
         }
      }
   }

   if { [llength $map_bdc_missing(ACTIVE)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2057 -severity "ERROR" "The following source(s) of Active variants are not found in the project: $map_bdc_missing(ACTIVE)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
      set bCheckIPsPassed 0
   }
   if { [llength $map_bdc_missing(BDC)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2059 -severity "WARNING" "The following source(s) of variants are not found in the project: $map_bdc_missing(BDC)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]


  # Create ports
  set clk_pl_50M [ create_bd_port -dir I -type clk -freq_hz 50000000 clk_pl_50M ]
  set receiver_ad_clk_60M [ create_bd_port -dir O -type clk receiver_ad_clk_60M ]
  set receiver_ad_sel1 [ create_bd_port -dir I -from 7 -to 0 -type data receiver_ad_sel1 ]
  set receiver_da [ create_bd_port -dir O -from 7 -to 0 -type data receiver_da ]
  set receiver_da_clk_60M [ create_bd_port -dir O -type clk receiver_da_clk_60M ]

  # Create instance: urllc_fifo_core_0, and set properties
  set urllc_fifo_core_0 [ create_bd_cell -type container -reference urllc_fifo_core urllc_fifo_core_0 ]
  set_property -dict [ list \
   CONFIG.ACTIVE_SIM_BD {urllc_fifo_core.bd} \
   CONFIG.ACTIVE_SYNTH_BD {urllc_fifo_core.bd} \
   CONFIG.ENABLE_DFX {0} \
   CONFIG.LIST_SIM_BD {urllc_fifo_core.bd} \
   CONFIG.LIST_SYNTH_BD {urllc_fifo_core.bd} \
   CONFIG.LOCK_PROPAGATE {0} \
 ] $urllc_fifo_core_0

  # Create interface connections
  connect_bd_intf_net -intf_net urllc_fifo_core_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins urllc_fifo_core_0/DDR]
  connect_bd_intf_net -intf_net urllc_fifo_core_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins urllc_fifo_core_0/FIXED_IO]

  # Create port connections
  connect_bd_net -net clk_pl_50M_1 [get_bd_ports clk_pl_50M] [get_bd_pins urllc_fifo_core_0/clk_pl_50M]
  connect_bd_net -net receiver_ad_sel1_1 [get_bd_ports receiver_ad_sel1] [get_bd_pins urllc_fifo_core_0/ad]
  connect_bd_net -net urllc_fifo_core_0_clk_ad_static [get_bd_ports receiver_da_clk_60M] [get_bd_pins urllc_fifo_core_0/clk_ad_static]
  connect_bd_net -net urllc_fifo_core_0_clk_da_dynamic [get_bd_ports receiver_ad_clk_60M] [get_bd_pins urllc_fifo_core_0/clk_da_dynamic]
  connect_bd_net -net urllc_fifo_core_0_da [get_bd_ports receiver_da] [get_bd_pins urllc_fifo_core_0/da]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.5",
   "Default View_TopLeft":"-364,-133",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 2 -x 320 -y 60 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 2 -x 320 -y 80 -defaultsOSRD
preplace port port-id_clk_pl_50M -pg 1 -lvl 0 -x 0 -y 110 -defaultsOSRD
preplace port port-id_receiver_ad_clk_60M -pg 1 -lvl 2 -x 320 -y 120 -defaultsOSRD
preplace port port-id_receiver_da_clk_60M -pg 1 -lvl 2 -x 320 -y 100 -defaultsOSRD
preplace portBus receiver_ad_sel1 -pg 1 -lvl 0 -x 0 -y 90 -defaultsOSRD
preplace portBus receiver_da -pg 1 -lvl 2 -x 320 -y 140 -defaultsOSRD
preplace inst urllc_fifo_core_0 -pg 1 -lvl 1 -x 160 -y 100 -defaultsOSRD
preplace netloc clk_pl_50M_1 1 0 1 NJ 110
preplace netloc receiver_ad_sel1_1 1 0 1 NJ 90
preplace netloc urllc_fifo_core_0_clk_ad_static 1 1 1 NJ 100
preplace netloc urllc_fifo_core_0_clk_da_dynamic 1 1 1 NJ 120
preplace netloc urllc_fifo_core_0_da 1 1 1 NJ 140
preplace netloc urllc_fifo_core_0_DDR 1 1 1 NJ 60
preplace netloc urllc_fifo_core_0_FIXED_IO 1 1 1 NJ 80
levelinfo -pg 1 0 160 320
pagesize -pg 1 -db -bbox -sgen -190 0 510 200
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_gid_msg -ssname BD::TCL -id 2050 -severity "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_urllc_fifo_receiver()
cr_bd_urllc_fifo_receiver ""
set_property REGISTERED_WITH_MANAGER "1" [get_files urllc_fifo_receiver.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files urllc_fifo_receiver.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse urllc_fifo_sender.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../../urllc-fifo.gen/sources_1/bd/urllc_fifo_sender/hdl/urllc_fifo_sender_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse urllc_fifo_sender.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}

if { [get_property IS_LOCKED [ get_files -norecurse urllc_fifo_receiver.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../../urllc-fifo.gen/sources_1/bd/urllc_fifo_receiver/hdl/urllc_fifo_receiver_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse urllc_fifo_receiver.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


generate_target all [get_files urllc_fifo_sender.bd]

# Set 'urllc_fifo_core_inst_0' fileset object
set obj [get_filesets urllc_fifo_core_inst_0]
# Set 'urllc_fifo_core_inst_0' fileset file properties for remote files
# None

# Set 'urllc_fifo_core_inst_0' fileset file properties for local files
# None

# Set 'urllc_fifo_core_inst_0' fileset properties
set obj [get_filesets urllc_fifo_core_inst_0]
set_property -name "top" -value "urllc_fifo_core_inst_0" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'urllc_fifo_core_inst_1' fileset object
set obj [get_filesets urllc_fifo_core_inst_1]
# Set 'urllc_fifo_core_inst_1' fileset file properties for remote files
# None

# Set 'urllc_fifo_core_inst_1' fileset file properties for local files
# None

# Set 'urllc_fifo_core_inst_1' fileset properties
set obj [get_filesets urllc_fifo_core_inst_1]
set_property -name "top" -value "urllc_fifo_core_inst_1" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg400-2 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth_receiver' run (if not found)
if {[string equal [get_runs -quiet synth_receiver] ""]} {
    create_run -name synth_receiver -part xc7z020clg400-2 -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_receiver]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_receiver]
}
set obj [get_runs synth_receiver]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_receiver_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_receiver] synth_receiver_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_receiver_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_receiver
}
set obj [get_report_configs -of_objects [get_runs synth_receiver] synth_receiver_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_receiver]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth_sender2' run (if not found)
if {[string equal [get_runs -quiet synth_sender2] ""]} {
    create_run -name synth_sender2 -part xc7z020clg400-2 -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_sender2]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_sender2]
}
set obj [get_runs synth_sender2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_sender2_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_sender2] synth_sender2_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_sender2_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_sender2
}
set obj [get_report_configs -of_objects [get_runs synth_sender2] synth_sender2_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_sender2]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth_sender_ila_1' run (if not found)
if {[string equal [get_runs -quiet synth_sender_ila_1] ""]} {
    create_run -name synth_sender_ila_1 -part xc7z020clg400-2 -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_sender_ila_1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_sender_ila_1]
}
set obj [get_runs synth_sender_ila_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_sender_ila_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_sender_ila_1] synth_sender_ila_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_sender_ila_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_sender_ila_1
}
set obj [get_report_configs -of_objects [get_runs synth_sender_ila_1] synth_sender_ila_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_sender_ila_1]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth_sender_ila1' run (if not found)
if {[string equal [get_runs -quiet synth_sender_ila1] ""]} {
    create_run -name synth_sender_ila1 -part xc7z020clg400-2 -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_sender_ila1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_sender_ila1]
}
set obj [get_runs synth_sender_ila1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_sender_ila1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_sender_ila1] synth_sender_ila1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_sender_ila1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs synth_sender_ila1] synth_sender_ila1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_sender_ila1]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_sender_ila1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg400-2 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_2' run (if not found)
if {[string equal [get_runs -quiet impl_2] ""]} {
    create_run -name impl_2 -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_receiver
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_2]
  set_property flow "Vivado Implementation 2021" [get_runs impl_2]
}
set obj [get_runs impl_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_2]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_receiver' run (if not found)
if {[string equal [get_runs -quiet impl_receiver] ""]} {
    create_run -name impl_receiver -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_receiver
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_receiver]
  set_property flow "Vivado Implementation 2021" [get_runs impl_receiver]
}
set obj [get_runs impl_receiver]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_receiver_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_receiver_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_receiver_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_io_0] "" ] } {
  create_report_config -report_name impl_receiver_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_receiver_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_receiver_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_receiver_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_receiver_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_receiver_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_receiver_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_receiver_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_receiver_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_receiver_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_receiver_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_receiver_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_power_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_receiver_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_receiver_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_receiver_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_receiver_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_receiver_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_receiver_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_receiver_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_receiver_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_receiver
}
set obj [get_report_configs -of_objects [get_runs impl_receiver] impl_receiver_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_receiver]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_receiver2' run (if not found)
if {[string equal [get_runs -quiet impl_receiver2] ""]} {
    create_run -name impl_receiver2 -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_receiver
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_receiver2]
  set_property flow "Vivado Implementation 2021" [get_runs impl_receiver2]
}
set obj [get_runs impl_receiver2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_receiver2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_receiver2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_receiver2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_receiver2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_receiver2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_receiver2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_receiver2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_receiver2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_receiver2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_receiver2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_receiver2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_receiver2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_receiver2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_receiver2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_receiver2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_receiver2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_receiver2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_receiver2
}
set obj [get_report_configs -of_objects [get_runs impl_receiver2] impl_receiver2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_receiver2]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_3' run (if not found)
if {[string equal [get_runs -quiet impl_3] ""]} {
    create_run -name impl_3 -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_sender2
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_3]
  set_property flow "Vivado Implementation 2021" [get_runs impl_3]
}
set obj [get_runs impl_3]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_3_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_3_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_3_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_io_0] "" ] } {
  create_report_config -report_name impl_3_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_3_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_3_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_3_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_3_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_3_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_3_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_3_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_3_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_3_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_3_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_3_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_power_0] "" ] } {
  create_report_config -report_name impl_3_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_3_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_3_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_3_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_3_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_3_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_3_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_3_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_3]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_sender2' run (if not found)
if {[string equal [get_runs -quiet impl_sender2] ""]} {
    create_run -name impl_sender2 -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_sender2
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_sender2]
  set_property flow "Vivado Implementation 2021" [get_runs impl_sender2]
}
set obj [get_runs impl_sender2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_sender2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_sender2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_sender2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_sender2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_sender2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_sender2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_sender2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_sender2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_sender2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_sender2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_sender2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_sender2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_sender2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_sender2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_sender2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_sender2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_sender2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_sender2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_sender2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_sender2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_sender2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_sender2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_sender2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_sender2
}
set obj [get_report_configs -of_objects [get_runs impl_sender2] impl_sender2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_sender2]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_4' run (if not found)
if {[string equal [get_runs -quiet impl_4] ""]} {
    create_run -name impl_4 -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_sender_ila_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_4]
  set_property flow "Vivado Implementation 2021" [get_runs impl_4]
}
set obj [get_runs impl_4]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_4_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_4_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_4_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_io_0] "" ] } {
  create_report_config -report_name impl_4_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_4_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_4_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_4_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_4_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_4_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_4_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_4_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_4_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_4_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_4_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_4_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_power_0] "" ] } {
  create_report_config -report_name impl_4_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_4_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_4_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_4_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_4_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_4_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_4_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_4_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_4]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_5' run (if not found)
if {[string equal [get_runs -quiet impl_5] ""]} {
    create_run -name impl_5 -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_sender_ila1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_5]
  set_property flow "Vivado Implementation 2021" [get_runs impl_5]
}
set obj [get_runs impl_5]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_5_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_5_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0] "" ] } {
  create_report_config -report_name impl_5_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_5_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_5_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_5_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_5_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_5_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_5_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0] "" ] } {
  create_report_config -report_name impl_5_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_5_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_5_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_5]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_sender_ila1' run (if not found)
if {[string equal [get_runs -quiet impl_sender_ila1] ""]} {
    create_run -name impl_sender_ila1 -part xc7z020clg400-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_sender_ila1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_sender_ila1]
  set_property flow "Vivado Implementation 2021" [get_runs impl_sender_ila1]
}
set obj [get_runs impl_sender_ila1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_sender_ila1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender_ila1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender_ila1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender_ila1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_sender_ila1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_sender_ila1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_sender_ila1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_sender_ila1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender_ila1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender_ila1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender_ila1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_sender_ila1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_sender_ila1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_sender_ila1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_sender_ila1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_sender_ila1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_sender_ila1
}
set obj [get_report_configs -of_objects [get_runs impl_sender_ila1] impl_sender_ila1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_sender_ila1]
set_property -name "part" -value "xc7z020clg400-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_sender_ila1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
